{
  "metadata": {
    "provider": "gcp",
    "service": "Bigquery",
    "service_name": "BigQuery",
    "version": "20240423",
    "scf_version": "2024.1.1",
    "license": "ThreatModel for BigQuery, by TrustOnCloud, under a Creative Commons Attribution-ShareAlike 4.0 International License (CC BY-SA 4.0). Find latest source at https://github.com/trustoncloud/threatmodel-for-gcp-bigquery"
  },
  "scorecard": {
    "identity_management": {
      "score": "Cloud IAM"
    },
    "resource_based": {
      "score": "tables<br>rows<br>columns<br>connections"
    },
    "network_filtering": {
      "score": "No"
    },
    "encryption_at_rest": {
      "score": "Yes"
    },
    "encryption_in_transit": {
      "score": "Yes"
    },
    "aws_cloudformation": {
      "score": "-"
    },
    "aws_tag_based_abac": {
      "score": "No"
    },
    "aws_cloudwatch_events": {
      "score": "via Logging"
    },
    "aws_vpc_endpoint": {
      "score": "-"
    },
    "aws_vpc_endpoint_policy": {
      "score": "-"
    },
    "gcp_vpc_service_controls": {
      "score": "Yes"
    },
    "number_of_actions": {
      "score": 141
    },
    "number_of_iam_permissions": {
      "score": 95
    },
    "number_of_events": {
      "score": 42
    },
    "event_coverage": {
      "score": "29.7"
    },
    "api_without_event": {
      "score": 78
    }
  },
  "feature_classes": {
    "Bigquery.FC1": {
      "name": "Dataset and tables",
      "class_relationship": [],
      "description": "You can create a table inside a dataset. You can run SQL queries and jobs on datasets in a very fast way. Jobs are actions that BigQuery runs on your behalf to load data, export data, query data, or copy data.",
      "long_description": "",
      "order": 0
    },
    "Bigquery.FC2": {
      "name": "User-Defined Functions",
      "class_relationship": [
        {
          "type": "parent",
          "class": "Bigquery.FC1"
        }
      ],
      "description": "A User-Defined Function (UDF) lets you create a function by using a SQL expression or JavaScript code.",
      "long_description": "A UDF accepts columns of input, performs actions on the input, and returns the result of those actions as a value.",
      "order": 1
    },
    "Bigquery.FC3": {
      "name": "BigQuery connections and BigQuery Omni",
      "class_relationship": [
        {
          "type": "parent",
          "class": "Bigquery.FC1"
        }
      ],
      "description": "To create a connection for federated queries when adding data from external data sources or exporting data to cross Cloud Storages.",
      "long_description": "",
      "order": 2
    },
    "Bigquery.FC4": {
      "name": "BigQuery Data Transfer",
      "class_relationship": [
        {
          "type": "parent",
          "class": "Bigquery.FC1"
        }
      ],
      "description": "You can transfer external data from SaaS applications to Google BigQuery on a regular basis.",
      "long_description": "",
      "order": 3
    },
    "Bigquery.FC5": {
      "name": "BigQuery reservation",
      "class_relationship": [
        {
          "type": "parent",
          "class": "Bigquery.FC1"
        }
      ],
      "description": "You can purchase dedicated query processing capacity.",
      "long_description": "BI Engine allows you to analyze data stored in BigQuery with sub-second query response time and high concurrency using BI reservations.",
      "order": 4
    },
    "Bigquery.FC6": {
      "name": "BigQuery ML",
      "class_relationship": [
        {
          "type": "parent",
          "class": "Bigquery.FC1"
        }
      ],
      "description": "You can create and execute machine learning models in BigQuery using standard SQL queries.",
      "long_description": "",
      "order": 5
    },
    "Bigquery.FC7": {
      "name": "Table snapshot",
      "class_relationship": [
        {
          "type": "parent",
          "class": "Bigquery.FC1"
        }
      ],
      "description": "A BigQuery table snapshot preserves the contents of a table (called the base table) at a particular time.",
      "long_description": "A BigQuery table snapshot preserves the contents of a table (called the base table) at a particular time. You can save a snapshot of a current table, or create a snapshot of a table as it was at any time in the past seven days.",
      "order": 6
    },
    "Bigquery.FC8": {
      "name": "Data policy",
      "class_relationship": [
        {
          "type": "parent",
          "class": "Bigquery.FC1"
        }
      ],
      "description": "You can provide different levels of visibility to different groups of users by using policy tags.",
      "long_description": "Policy tags are tags with access control policies that can be applied to sub-resources.",
      "order": 7
    }
  },
  "threats": {
    "Bigquery.T1": {
      "feature_class": "Bigquery.FC1",
      "name": "Destruction of data by deleting dataset or table",
      "description": "A project has a dataset. Inside a dataset, a table is created, and data is stored inside this table. An attacker can delete the table or a dataset causing a loss of data.",
      "access": {
        "OR": [
          "bigquery.tables.delete",
          "bigquery.datasets.delete"
        ]
      },
      "hlgoal": "DoS",
      "mitre_attack": "TA0040",
      "cvss": "CVSS:3.1/AV:A/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L",
      "retired": "false",
      "cvss_severity": "Low",
      "cvss_score": 3.5
    },
    "Bigquery.T2": {
      "feature_class": "Bigquery.FC3",
      "name": "Unauthorized access to data by changing connection configurations",
      "description": "BigQuery federations enable BigQuery to query data residing in Cloud SQL or other places in real-time, without copying or moving data. For each federation, a connection is created. An attacker can use an existing connection by viewing the connection list or sharing it with another user to get unauthorized access to tables residing in other sources.",
      "access": {
        "OR": [
          "bigquery.connections.update",
          "bigquery.connections.get",
          "bigquery.connections.list",
          "bigquery.connections.getIamPolicy",
          "bigquery.connections.use",
          "bigquery.connections.setIamPolicy"
        ]
      },
      "hlgoal": "LaunchAttack",
      "mitre_attack": "TA0001",
      "cvss": "CVSS:3.1/AV:A/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:N",
      "retired": "false",
      "cvss_severity": "Medium",
      "cvss_score": 5.7
    },
    "Bigquery.T3": {
      "feature_class": "Bigquery.FC1",
      "name": "Loss of integrity and availability by copying datasets and overwriting the destination table(s)",
      "description": "Datasets can be copied to another existing dataset. During this process, the tables of the destination dataset can be overwritten. An attacker can overwrite the destination table causing a loss of integrity and availability.",
      "access": {
        "AND": [
          "bigquery.jobs.create",
          "bigquery.datasets.get",
          "bigquery.datasets.update",
          "bigquery.tables.create"
        ]
      },
      "hlgoal": "DataManipulation",
      "mitre_attack": "TA0040",
      "cvss": "CVSS:3.1/AV:A/AC:H/PR:H/UI:N/S:U/C:N/I:H/A:H",
      "retired": "false",
      "cvss_severity": "Medium",
      "cvss_score": 5.7
    },
    "Bigquery.T4": {
      "feature_class": "Bigquery.FC6",
      "name": "Loss of the integrity of training model",
      "description": "ML models train on data and the accuracy of the model depends on the quantity and quality of training data. The training data is stored in the form of tables or views. An attacker can decrease the quality of a model by adding bogus data into tables and views or removing data from them, decreasing the efficiency of the model created and harming the business decisions made on the basis of predictions from this model.",
      "access": {
        "AND": [
          "bigquery.jobs.create",
          {
            "OR": [
              "bigquery.models.updateData",
              "bigquery.models.updateMetadata"
            ]
          }
        ]
      },
      "hlgoal": "DataManipulation",
      "mitre_attack": "TA0040",
      "cvss": "CVSS:3.1/AV:A/AC:H/PR:H/UI:N/S:U/C:N/I:H/A:N",
      "retired": "false",
      "cvss_severity": "Medium",
      "cvss_score": 4.2
    },
    "Bigquery.T5": {
      "feature_class": "Bigquery.FC1",
      "name": "Loss of integrity and availability by appending, overwriting data, or creating a table",
      "description": "Data is stored inside a BigQuery table. An attacker can create a table, overwrite table data using a load or query operation or append additional data to an existing table by performing a load-append operation or by appending query results to the table, causing a loss of data integrity and availability.",
      "access": {
        "OR": [
          "bigquery.tables.create",
          "bigquery.tables.updateData",
          "bigquery.jobs.create"
        ]
      },
      "hlgoal": "DataManipulation",
      "mitre_attack": "TA0040",
      "cvss": "CVSS:3.1/AV:A/AC:L/PR:H/UI:N/S:U/C:N/I:H/A:L",
      "retired": "false",
      "cvss_severity": "Medium",
      "cvss_score": 5.2
    },
    "Bigquery.T6": {
      "feature_class": "Bigquery.FC1",
      "name": "Exfiltration of data by exporting tables to other services",
      "description": "Data can be sent to other services for storing or processing it. An attacker can export data to either their destination table or a service like Cloud Storage, Data Studio, or DLP.",
      "access": {
        "AND": [
          {
            "OPTIONAL": {
              "AND": [
                "storage.objects.create",
                "storage.objects.delete"
              ]
            }
          },
          "bigquery.tables.export",
          "bigquery.jobs.create",
          "bigquery.tables.getData"
        ]
      },
      "hlgoal": "DataTheft",
      "mitre_attack": "TA0010",
      "cvss": "CVSS:3.1/AV:A/AC:H/PR:H/UI:N/S:U/C:H/I:N/A:N",
      "retired": "false",
      "cvss_severity": "Medium",
      "cvss_score": 4.2
    },
    "Bigquery.T7": {
      "feature_class": "Bigquery.FC1",
      "name": "DoS by throttling limit",
      "description": "DoS by exhausting quota limit for BigQuery GCP enforces <a href=\"https://cloud.google.com/bigquery/quotas\">quotas</a> on BigQuery resources (e.g., concurrent rate limit for interactive queries is limited to 100 queries). An attacker can exhaust the current quota limit for interactive and federated queries, load or export jobs, table and metadata, streaming inserts, and UDF limits to perform Denial of Service by sending many requests.",
      "access": {
        "UNIQUE": "bigquery.depends"
      },
      "hlgoal": "DoS",
      "mitre_attack": "TA0040",
      "cvss": "CVSS:3.1/AV:A/AC:H/PR:H/UI:N/S:U/C:N/I:N/A:L",
      "retired": "false",
      "cvss_severity": "Low",
      "cvss_score": 2.0
    },
    "Bigquery.T8": {
      "feature_class": "Bigquery.FC2",
      "name": "Loss of integrity and availability by manipulating data using UDFs",
      "description": "A User-Defined Function (UDF) or routine allows the creation of a function using a SQL expression or JavaScript code. A UDF accepts columns of input, performs actions on the input, and returns the result of those actions as a value. An attacker can write temporary UDFs to perform actions like updating columns or extracting PII from the tables.",
      "access": {
        "UNIQUE": "bigquery.routines.create"
      },
      "hlgoal": "DataManipulation",
      "mitre_attack": "TA0040",
      "cvss": "CVSS:3.1/AV:A/AC:L/PR:H/UI:N/S:U/C:N/I:H/A:L",
      "retired": "false",
      "cvss_severity": "Medium",
      "cvss_score": 5.2
    },
    "Bigquery.T9": {
      "feature_class": "Bigquery.FC1",
      "name": "Escalate privileges, loss of availability or integrity of data, or exfiltrate data via an unauthorized query on a dataset or a table",
      "description": "SQL queries are run on the data stored inside tables. An attacker can run a simple SQL query (e.g., \"SELECT * FROM <i>TABLE_NAME</i>\") to get all the data from a specific table. An attacker can also update or drop columns of a table, change the case sensitivity of datasets and its tables to escalate privileges while avoiding detection by a poorly designed access management system, set unauthorized default values of a column to corrupt or steal data, or update the metadata cache settings of object or BigLake tables to impact the query latency.",
      "access": {
        "AND": [
          "bigquery.jobs.create",
          "bigquery.tables.getData"
        ]
      },
      "hlgoal": "DataTheft",
      "mitre_attack": "TA0010",
      "cvss": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
      "retired": "false",
      "cvss_severity": "High",
      "cvss_score": 8.8
    },
    "Bigquery.T10": {
      "feature_class": "Bigquery.FC1",
      "name": "Restricting access to datasets, tables, and connections by modification of privileges",
      "description": "IAM permissions can be used to allow access to perform actions on BigQuery datasets, tables, and connections. An attacker can limit access to tables, rows, or columns for legitimate users or allow unauthorized users to access by modifying the permissions.",
      "access": {
        "OR": [
          "bigquery.datasets.setIamPolicy",
          "bigquery.rowAccessPolicies.setIamPolicy",
          "bigquery.tables.setIamPolicy",
          "bigquery.connections.setIamPolicy",
          "bigquery.rowAccessPolicies.update"
        ]
      },
      "hlgoal": "LaunchAttack",
      "mitre_attack": "TA0004",
      "cvss": "CVSS:3.1/AV:A/AC:H/PR:H/UI:N/S:U/C:N/I:H/A:N",
      "retired": "false",
      "cvss_severity": "Medium",
      "cvss_score": 4.2
    },
    "Bigquery.T11": {
      "feature_class": "Bigquery.FC1",
      "name": "Disruption of application functionality by modification of table and views configurations",
      "description": "Specific properties are associated with tables and views during the creation. An attacker can modify these properties (e.g., schema, expiration time) causing downstream applications disruption or permanent data loss.",
      "access": {
        "UNIQUE": "bigquery.tables.update"
      },
      "hlgoal": "DoS",
      "mitre_attack": "TA0040",
      "cvss": "CVSS:3.1/AV:A/AC:H/PR:H/UI:N/S:U/C:N/I:L/A:H",
      "retired": "false",
      "cvss_severity": "Medium",
      "cvss_score": 4.8
    },
    "Bigquery.T12": {
      "feature_class": "Bigquery.FC5",
      "name": "Denial of Service/denial of wallet by removing/creating reservations",
      "description": "A slot is a dedicated vCPU that runs queries. Each slot is allocated to a reservation. An attacker can remove a reservation, failing any jobs that are currently executing with slots from that reservation or decreasing the performance for future jobs. An attacker can also create a reservation with unauthorized configurations or modify an existing reservation to achieve the same objective or incur cost.",
      "access": {
        "OR": [
          {
            "AND": [
              "bigquery.reservations.delete",
              "bigquery.reservationAssignments.delete"
            ]
          },
          {
            "AND": [
              "bigquery.reservationAssignments.create",
              {
                "OR": [
                  "bigquery.reservations.create",
                  "bigquery.reservations.update"
                ]
              }
            ]
          }
        ]
      },
      "hlgoal": "DoS",
      "mitre_attack": "TA0040",
      "cvss": "CVSS:3.1/AV:A/AC:H/PR:H/UI:N/S:U/C:N/I:L/A:H",
      "retired": "false",
      "cvss_severity": "Medium",
      "cvss_score": 4.8
    },
    "Bigquery.T13": {
      "feature_class": "Bigquery.FC4",
      "name": "Data exfiltration by updating the destination dataset in transfer and transfer credentials",
      "description": "The BigQuery Data Transfer Service automates data movement into BigQuery on a scheduled, managed basis using the credentials of the user who created it. An attacker can update the destination dataset or transfer credentials of a transfer job and configuration to their own dataset and give them full control over the transfer. An attacker can also transfer data from unauthorized sources.",
      "access": {
        "AND": [
          "bigquery.transfers.update",
          "bigquery.datasets.get",
          "bigquery.datasets.update"
        ]
      },
      "hlgoal": "DataTheft",
      "mitre_attack": "TA0010",
      "cvss": "CVSS:3.1/AV:A/AC:L/PR:H/UI:N/S:U/C:L/I:H/A:N",
      "retired": "false",
      "cvss_severity": "Medium",
      "cvss_score": 5.2
    },
    "Bigquery.T14": {
      "feature_class": "Bigquery.FC7",
      "name": "Loss of data during recovery by deleting a snapshot",
      "description": "Snapshots can be used to restore previous data. An attacker (or someone by negligence) can delete snapshots to block data recovery.",
      "access": {
        "UNIQUE": "bigquery.tables.deleteSnapshot"
      },
      "hlgoal": "DataManipulation",
      "mitre_attack": "TA0040",
      "cvss": "CVSS:3.1/AV:A/AC:L/PR:H/UI:R/S:U/C:N/I:H/A:N",
      "retired": "false",
      "cvss_severity": "Medium",
      "cvss_score": 4.3
    },
    "Bigquery.T15": {
      "feature_class": "Bigquery.FC3",
      "name": "Data exfiltration by exporting query results",
      "description": "BigQuery Omni uses BigQuery connections to export query results to GCP services (e.g., Spanner, BigTable, Cloud Storage), Amazon S3, or Azure Storage. An attacker can create a connection to export query results to their GCP services, Amazon S3, or Azure Storage to exfiltrate data.",
      "access": {
        "AND": [
          "bigquery.connections.create",
          "bigquery.jobs.create",
          "bigquery.tables.getData",
          "bigquery.tables.export",
          "bigquery.connections.use"
        ]
      },
      "hlgoal": "DataTheft",
      "mitre_attack": "TA0010",
      "cvss": "CVSS:3.1/AV:A/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N",
      "retired": "false",
      "cvss_severity": "Medium",
      "cvss_score": 4.5
    },
    "Bigquery.T17": {
      "feature_class": "Bigquery.FC8",
      "name": "Unauthorized access to the table columns by adding or removing policy tags",
      "description": "Policy tags are attached to a column in a BigQuery table to control the visibility of sensitive data to different groups of users. An attacker can create or update a data policy or its data masking rules and associate it with a column by attaching the policy tags associated with the column policy to the column in order to escalate privileges or leak data.",
      "access": {
        "AND": [
          {
            "OR": [
              "bigquery.dataPolicies.create",
              "bigquery.dataPolicies.update"
            ]
          },
          "datacatalog.taxonomies.get",
          "bigquery.dataPolicies.setIamPolicy",
          "bigquery.tables.setCategory",
          "bigquery.tables.create"
        ]
      },
      "hlgoal": "LaunchAttack",
      "mitre_attack": "TA0004",
      "cvss": "CVSS:3.1/AV:A/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N",
      "retired": "false",
      "cvss_severity": "Low",
      "cvss_score": 3.5
    },
    "Bigquery.T18": {
      "feature_class": "Bigquery.FC6",
      "name": "Model exfiltration by registering BigQuery ML models with the Vertex AI Model Registry",
      "description": "BigQuery ML models can be integrated with the Vertex AI Model Registry for management purposes. An attacker can register an existing model with their Vertex AI Model Registry to exfiltrate the model.",
      "access": {
        "OR": [
          "bigquery.jobs.create",
          "bigquery.models.updateData"
        ]
      },
      "hlgoal": "DataTheft",
      "mitre_attack": "TA0010",
      "cvss": "CVSS:3.1/AV:A/AC:H/PR:H/UI:N/S:U/C:H/I:L/A:N",
      "retired": "false",
      "cvss_severity": "Medium",
      "cvss_score": 4.8
    },
    "Bigquery.T19": {
      "feature_class": "Bigquery.FC1",
      "name": "Table exfiltration by cloning",
      "description": "A table clone is a writable copy of another table. It can be created in another project within the same region. An attacker can clone a table to an unauthorized project to exfiltrate it.",
      "access": {
        "UNIQUE": "bigquery.jobs.create"
      },
      "hlgoal": "DataTheft",
      "mitre_attack": "TA0010",
      "cvss": "CVSS:3.1/AV:A/AC:H/PR:H/UI:N/S:U/C:H/I:N/A:N",
      "retired": "false",
      "cvss_severity": "Medium",
      "cvss_score": 4.2
    },
    "Bigquery.T20": {
      "feature_class": "Bigquery.FC1",
      "name": "Exfiltration of query results to an unauthorized destination table or execution of unauthorized UDFs",
      "description": "An asynchronous job can be created, which can include various types of jobs such as query jobs, load jobs, copy jobs, extract jobs. An attacker can execute an unauthorized query, provide an unauthorized destination table to store query results, overwrite destination table, update the schema for the destination table, or change the encryption of the destination table. An attacker can also execute UDFs from unauthorized Cloud Storage for purposes like exfiltration.",
      "access": {
        "AND": [
          "bigquery.jobs.create",
          {
            "OPTIONAL": "bigquery.tables.getData"
          }
        ]
      },
      "hlgoal": "DataTheft",
      "mitre_attack": "TA0010",
      "cvss": "CVSS:3.1/AV:A/AC:H/PR:H/UI:N/S:U/C:H/I:L/A:N",
      "retired": "false",
      "cvss_severity": "Medium",
      "cvss_score": 4.8
    },
    "Bigquery.T21": {
      "feature_class": "Bigquery.FC1",
      "name": "Misconfiguration of a dataset to cause loss of integrity and availability or privilege escalation by modification of access array of a dataset",
      "description": "A dataset is a top-level container used to organize and control access to your tables and views. Certain default configurations and options that can be set at the dataset level, which indirectly affect the tables within that dataset. An attacker can create or update a dataset with unauthorized values for these configurations to cause loss of integrity and availability (e.g., setting an unauthorized value for defaultTableExpirationMs to delete a table automatically when its expirationTime is reached) or create or modify access for a dataset to escalate privileges.",
      "access": {
        "OR": [
          "bigquery.datasets.create",
          "bigquery.datasets.update"
        ]
      },
      "hlgoal": "DataManipulation",
      "mitre_attack": "TA0004",
      "cvss": "CVSS:3.1/AV:A/AC:H/PR:H/UI:N/S:U/C:N/I:H/A:H",
      "retired": "false",
      "cvss_severity": "Medium",
      "cvss_score": 5.7
    },
    "Bigquery.T22": {
      "feature_class": "Bigquery.FC6",
      "name": "Permanent loss of a BigQuery ML model by modifying its expiration time",
      "description": "A model's expiration time in BigQuery determines when it will be automatically deleted, serving as its \"time to live\" (TTL) and can also be adjusted after the model has been created. An attacker can update the expiration time of a model to cause its permanent loss.",
      "access": {
        "UNIQUE": "bigquery.models.updateMetadata"
      },
      "hlgoal": "DoS",
      "mitre_attack": "TA0040",
      "cvss": "CVSS:3.1/AV:L/AC:H/PR:H/UI:N/S:U/C:N/I:N/A:H",
      "retired": "false",
      "cvss_severity": "Medium",
      "cvss_score": 4.1
    },
    "Bigquery.T23": {
      "feature_class": "Bigquery.FC6",
      "name": "BigQuery ML model exfiltration",
      "description": "BigQuery ML models can be exported to Cloud Storage. An attacker can steal a model by exporting it to an unauthorized Cloud Storage.",
      "access": {
        "AND": [
          "bigquery.models.export",
          "bigquery.jobs.create",
          "storage.objects.create"
        ]
      },
      "hlgoal": "DataTheft",
      "mitre_attack": "TA0010",
      "cvss": "CVSS:3.1/AV:A/AC:H/PR:H/UI:N/S:U/C:H/I:N/A:N",
      "retired": "false",
      "cvss_severity": "Medium",
      "cvss_score": 4.2
    },
    "Bigquery.T24": {
      "feature_class": "Bigquery.FC6",
      "name": "Importing malicious models in BigQuery",
      "description": "Models can be imported from Cloud Storage buckets into BigQuery. An attacker can import a malicious or unauthorized model into BigQuery to perform harmful actions within BigQuery, affecting the integrity of the system to cause disruptions, potentially access and manipulate sensitive data within BigQuery, or misuse resources, such as excessive consumption of computing resources.",
      "access": {
        "AND": [
          "bigquery.jobs.create",
          "storage.objects.get"
        ]
      },
      "hlgoal": "DoS",
      "mitre_attack": "TA0002",
      "cvss": "CVSS:3.1/AV:L/AC:H/PR:H/UI:N/S:U/C:N/I:H/A:L",
      "retired": "false",
      "cvss_severity": "Medium",
      "cvss_score": 4.7
    },
    "Bigquery.T25": {
      "feature_class": "Bigquery.FC1",
      "name": "Misconfiguration of a table to cause loss of integrity and availability",
      "description": "A table is a primary storage structure used to hold structured data within datasets. Standard BigQuery tables store structured data directly within BigQuery, external tables reference data stored outside BigQuery, and views are logical tables built using SQL queries. An attacker can create or update a table with unauthorized configuration to cause loss of integrity or availability (e.g., by creating or updating a materialized viewed with unauthorized value for staleness to deliberately serve outdated and potentially misleading data to users or applications, which could lead to inaccurate analysis results and misinformed business decisions, an external source with corrupted data, table with unauthorized value of expiration or an unauthorized key for encryption).",
      "access": {
        "OR": [
          "bigquery.tables.create",
          "bigquery.tables.update"
        ]
      },
      "hlgoal": "DataManipulation",
      "mitre_attack": "TA0040",
      "cvss": "CVSS:3.1/AV:A/AC:H/PR:H/UI:N/S:U/C:N/I:H/A:H",
      "retired": "false",
      "cvss_severity": "Medium",
      "cvss_score": 5.7
    },
    "Bigquery.T26": {
      "feature_class": "Bigquery.FC1",
      "name": "Unauthorized data access via cache",
      "description": "Users can read the contents of tables within BigQuery, enabling them to query and retrieve data stored in specific tables. Results from queries against table snapshots can also be returned from the <a href=\"https://cloud.google.com/bigquery/docs/cached-results#security\">cache</a>, even if the caller loses access to the data within the last 24 hours. An attacker can retrieve data from BigQuery tables or access the query results from the cache without making any new queries.",
      "access": {
        "AND": [
          "bigquery.tables.getData",
          {
            "OPTIONAL": "datacatalog.categories.fineGrainedGet"
          }
        ]
      },
      "hlgoal": "DataTheft",
      "mitre_attack": "TA0010",
      "cvss": "CVSS:3.1/AV:A/AC:L/PR:H/UI:R/S:U/C:L/I:N/A:N",
      "retired": "false",
      "cvss_severity": "Low",
      "cvss_score": 2.1
    }
  },
  "control_objectives": {
    "Bigquery.CO1": {
      "description": "Limit access to the IAM actions required to execute the threats",
      "scf": [
        "IAC-01",
        "IAC-02",
        "IAC-15",
        "IAC-16",
        "IAC-20",
        "IAC-21",
        "IAC-28",
        "MON-02",
        "MON-03",
        "MON-09",
        "MON-16"
      ]
    },
    "Bigquery.CO2": {
      "description": "Enforce network-level restrictions leveraging VPC origin and VPC Service Controls",
      "scf": [
        "CHG-04",
        "IAC-20",
        "NET-02",
        "NET-03",
        "NET-04",
        "NET-06"
      ]
    },
    "Bigquery.CO3": {
      "description": "Create and secure backups (e.g., by snapshots or exports) of BigQuery dataset(s) and table(s)",
      "scf": [
        "BCD-11",
        "DCH-13"
      ]
    },
    "Bigquery.CO4": {
      "description": "Control access to tables and views",
      "scf": [
        "DCH-01",
        "DCH-02",
        "IAC-02",
        "IAC-03",
        "IAC-15",
        "IAC-20"
      ]
    },
    "Bigquery.CO5": {
      "description": "Restrict access to columns and protect sensitive data",
      "scf": [
        "DCH-01",
        "DCH-02",
        "IAC-02",
        "IAC-03",
        "IAC-15",
        "IAC-20"
      ]
    },
    "Bigquery.CO6": {
      "description": "Restrict access to rows with BigQuery row-level security",
      "scf": [
        "DCH-01",
        "DCH-02",
        "IAC-02",
        "IAC-03",
        "IAC-15",
        "IAC-20"
      ]
    },
    "Bigquery.CO7": {
      "description": "Encrypt datasets and models at rest, and protect the keys",
      "scf": [
        "CHG-04",
        "CRY-05",
        "CRY-09"
      ]
    },
    "Bigquery.CO8": {
      "description": "Ensure authorized configuration(s) are used with BigQuery datasets, tables, reservations, assignments, and asynchronous query jobs",
      "scf": [
        "CFG-02",
        "CHG-04",
        "IAC-21"
      ]
    },
    "Bigquery.CO9": {
      "description": "De-identify sensitive data using Cloud DLP",
      "scf": [
        "DCH-01",
        "DCH-14",
        "DCH-22",
        "DCH-23"
      ]
    },
    "Bigquery.CO10": {
      "description": "Secure the authorized sources and destinations used with tables, models, and connections",
      "scf": [
        "CHG-04",
        "DCH-01",
        "DCH-13",
        "DCH-16",
        "IAC-20"
      ]
    },
    "Bigquery.CO11": {
      "description": "Set the quotas on BigQuery as per the API usage statistics",
      "scf": [
        "CAP-01",
        "CAP-02"
      ]
    },
    "Bigquery.CO12": {
      "description": "Set the expiration time of BigQuery tables as per the requirements",
      "scf": [
        "DCH-09",
        "DCH-21"
      ]
    },
    "Bigquery.CO13": {
      "description": "Monitor BigQuery capacity and utilization",
      "scf": [
        "CAP-01",
        "CAP-02",
        "MON-04"
      ]
    },
    "Bigquery.CO14": {
      "description": "Limit usage of BigQuery Omni",
      "scf": [
        "CFG-02",
        "CHG-04",
        "IAC-21"
      ]
    },
    "Bigquery.CO15": {
      "description": "Enable logs for BigQuery Data Transfer",
      "scf": [
        "CFG-08",
        "MON-02",
        "MON-03",
        "MON-09",
        "MON-11"
      ]
    },
    "Bigquery.CO16": {
      "description": "Monitor data ingestion and data quality",
      "scf": [
        "DCH-20",
        "MON-03",
        "MON-11",
        "MON-13",
        "MON-16"
      ]
    },
    "Bigquery.CO17": {
      "description": "Register BigQuery models as per the requirements",
      "scf": [
        "CHG-04",
        "IAC-15",
        "IAC-16",
        "IAC-21"
      ]
    },
    "Bigquery.CO18": {
      "description": "Limit the amount of cloned data",
      "scf": [
        "CFG-08",
        "DCH-02",
        "DCH-03",
        "DCH-05",
        "DCH-14"
      ]
    },
    "Bigquery.CO19": {
      "description": "Ensure authorized configuration(s) are used with jobs",
      "scf": [
        "CFG-02",
        "CHG-04",
        "IAC-21"
      ]
    },
    "Bigquery.CO20": {
      "description": "Monitor abnormal performance of queries",
      "scf": [
        "MON-11",
        "MON-16"
      ]
    },
    "Bigquery.CO21": {
      "description": "Use authorized metadata caching",
      "scf": [
        "CFG-02",
        "CHG-04",
        "IAC-21"
      ]
    },
    "Bigquery.CO22": {
      "description": "Secure and use the authorized sources and their respective authorized configurations with BigQuery Data Transfer",
      "scf": [
        "CFG-08",
        "CLD-09",
        "CLD-10",
        "DCH-13",
        "DCH-14"
      ]
    },
    "Bigquery.CO23": {
      "description": "Use authorized User-Defined Functions",
      "scf": [
        "CFG-02",
        "CHG-04",
        "IAC-21"
      ]
    },
    "Bigquery.CO24": {
      "description": "Enforce SDLC process on User-Defined Functions",
      "scf": [
        "CHG-04",
        "PRM-07",
        "TDA-06",
        "TDA-10"
      ]
    },
    "Bigquery.CO25": {
      "description": "Set an authorized expiration time for each ML model",
      "scf": [
        "DCH-09",
        "DCH-21"
      ]
    }
  },
  "controls": {
    "Bigquery.C1": {
      "coso": "Directive",
      "nist_csf": "Protect",
      "objective": "Bigquery.CO1",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Limit the access to the IAM actions required to perform the attack, following the IAM Operating Model and using the IAM ThreatModel.",
      "testing": "Request the list of authorized IAM members with the permissions required to launch the attack, its review process, and its review records.",
      "effort": "High",
      "mitigate": [
        {
          "threat": "Bigquery.T1",
          "impact": "Very High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "Low"
        },
        {
          "threat": "Bigquery.T2",
          "impact": "Very High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T3",
          "impact": "Very High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T4",
          "impact": "Very High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T5",
          "impact": "Very High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T6",
          "impact": "Very High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T7",
          "impact": "Very High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "Low"
        },
        {
          "threat": "Bigquery.T8",
          "impact": "Very High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T9",
          "impact": "Very High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "High"
        },
        {
          "threat": "Bigquery.T10",
          "impact": "Very High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T11",
          "impact": "Very High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T12",
          "impact": "Very High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T13",
          "impact": "Very High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T14",
          "impact": "Very High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T15",
          "impact": "Very High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T17",
          "impact": "Very High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "Low"
        },
        {
          "threat": "Bigquery.T18",
          "impact": "Very High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T19",
          "impact": "Very High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T20",
          "impact": "Very High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T21",
          "impact": "Very High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T22",
          "impact": "Very High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T23",
          "impact": "Very High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T24",
          "impact": "Very High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T25",
          "impact": "Very High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T26",
          "impact": "Very High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "Low"
        }
      ],
      "feature_class": [
        "Bigquery.FC1",
        "Bigquery.FC2",
        "Bigquery.FC3",
        "Bigquery.FC4",
        "Bigquery.FC5",
        "Bigquery.FC6",
        "Bigquery.FC7",
        "Bigquery.FC8"
      ],
      "weighted_priority": "High",
      "weighted_priority_score": 3,
      "queryable_objective_id": 1,
      "queryable_id": 1
    },
    "Bigquery.C2": {
      "coso": "Directive",
      "nist_csf": "Protect",
      "objective": "Bigquery.CO2",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Enforce VPC origin (e.g., using DNS redirection on a VPC-based proxy), allow port 443 only on the Firewalls, and configure VPC Service Controls (if applicable) for BigQuery and BigQuery-connected services (e.g., Pub/Sub, KMS) considering the different sensitivity of the environment (e.g., Prod vs. Non-Prod), using the Compute ThreatModel.",
      "testing": "Request the process and records of enabling and protecting VPC Service Controls for BigQuery and BigQuery-connected services, using the Compute ThreatModel.",
      "effort": "Low",
      "mitigate": [
        {
          "threat": "Bigquery.T1",
          "impact": "High",
          "priority": 4.0,
          "max_dependency": null,
          "priority_overall": 4.0,
          "cvss": "Low"
        },
        {
          "threat": "Bigquery.T3",
          "impact": "High",
          "priority": 4.0,
          "max_dependency": null,
          "priority_overall": 4.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T4",
          "impact": "High",
          "priority": 4.0,
          "max_dependency": null,
          "priority_overall": 4.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T5",
          "impact": "High",
          "priority": 4.0,
          "max_dependency": null,
          "priority_overall": 4.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T6",
          "impact": "High",
          "priority": 4.0,
          "max_dependency": null,
          "priority_overall": 4.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T7",
          "impact": "High",
          "priority": 4.0,
          "max_dependency": null,
          "priority_overall": 4.0,
          "cvss": "Low"
        },
        {
          "threat": "Bigquery.T8",
          "impact": "High",
          "priority": 4.0,
          "max_dependency": null,
          "priority_overall": 4.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T9",
          "impact": "High",
          "priority": 4.0,
          "max_dependency": null,
          "priority_overall": 4.0,
          "cvss": "High"
        },
        {
          "threat": "Bigquery.T10",
          "impact": "High",
          "priority": 4.0,
          "max_dependency": null,
          "priority_overall": 4.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T11",
          "impact": "High",
          "priority": 4.0,
          "max_dependency": null,
          "priority_overall": 4.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T12",
          "impact": "High",
          "priority": 4.0,
          "max_dependency": null,
          "priority_overall": 4.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T13",
          "impact": "High",
          "priority": 4.0,
          "max_dependency": null,
          "priority_overall": 4.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T14",
          "impact": "High",
          "priority": 4.0,
          "max_dependency": null,
          "priority_overall": 4.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T15",
          "impact": "High",
          "priority": 4.0,
          "max_dependency": null,
          "priority_overall": 4.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T17",
          "impact": "High",
          "priority": 4.0,
          "max_dependency": null,
          "priority_overall": 4.0,
          "cvss": "Low"
        },
        {
          "threat": "Bigquery.T18",
          "impact": "High",
          "priority": 4.0,
          "max_dependency": null,
          "priority_overall": 4.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T19",
          "impact": "High",
          "priority": 4.0,
          "max_dependency": null,
          "priority_overall": 4.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T20",
          "impact": "High",
          "priority": 4.0,
          "max_dependency": null,
          "priority_overall": 4.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T21",
          "impact": "High",
          "priority": 4.0,
          "max_dependency": null,
          "priority_overall": 4.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T22",
          "impact": "High",
          "priority": 4.0,
          "max_dependency": null,
          "priority_overall": 4.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T23",
          "impact": "High",
          "priority": 4.0,
          "max_dependency": null,
          "priority_overall": 4.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T24",
          "impact": "High",
          "priority": 4.0,
          "max_dependency": null,
          "priority_overall": 4.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T26",
          "impact": "High",
          "priority": 4.0,
          "max_dependency": null,
          "priority_overall": 4.0,
          "cvss": "Low"
        }
      ],
      "feature_class": [
        "Bigquery.FC1",
        "Bigquery.FC2",
        "Bigquery.FC3",
        "Bigquery.FC4",
        "Bigquery.FC5",
        "Bigquery.FC6",
        "Bigquery.FC7",
        "Bigquery.FC8"
      ],
      "weighted_priority": "Very High",
      "weighted_priority_score": 4,
      "queryable_objective_id": 2,
      "queryable_id": 2
    },
    "Bigquery.C3": {
      "coso": "Directive",
      "nist_csf": "Identify",
      "objective": "Bigquery.CO3",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Define the requirements for the backup of each BigQuery dataset and table.",
      "testing": "Request the backup requirements for each BigQuery dataset and table.",
      "effort": "Low",
      "mitigate": [
        {
          "threat": "Bigquery.T1",
          "impact": "Very Low",
          "priority": 0.0,
          "max_dependency": 2.0,
          "priority_overall": 2.0,
          "cvss": "Low"
        },
        {
          "threat": "Bigquery.T14",
          "impact": "Very Low",
          "priority": 0.0,
          "max_dependency": 2.0,
          "priority_overall": 2.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC1",
        "Bigquery.FC7"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 3,
      "queryable_id": 3
    },
    "Bigquery.C4": {
      "coso": "Directive",
      "nist_csf": "Protect",
      "objective": "Bigquery.CO3",
      "retired": "false",
      "assured_by": "Bigquery.C5",
      "depends_on": "Bigquery.C3",
      "description": "Ensure each BigQuery dataset and table is backed up (e.g., by creating snapshots or exports) according to the requirements and is restorable.",
      "testing": "Request the mechanism ensuring BigQuery datasets and tables are backed up (e.g., by creating snapshots or exports) according to their requirements, the evidence of their execution, and their regular testing of restoration.",
      "effort": "High",
      "mitigate": [
        {
          "threat": "Bigquery.T1",
          "impact": "High",
          "priority": 2.0,
          "max_dependency": null,
          "priority_overall": 2.0,
          "cvss": "Low"
        },
        {
          "threat": "Bigquery.T14",
          "impact": "High",
          "priority": 2.0,
          "max_dependency": null,
          "priority_overall": 2.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC1",
        "Bigquery.FC7"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 3,
      "queryable_id": 4
    },
    "Bigquery.C5": {
      "coso": "Assurance",
      "nist_csf": "Detect",
      "objective": "Bigquery.CO3",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Verify all BigQuery datasets and tables are backed up according to their requirements.",
      "testing": "Change the backup mechanism to be outside the requirements; it should be detected.",
      "effort": "High",
      "mitigate": [],
      "feature_class": [
        "Bigquery.FC1",
        "Bigquery.FC7"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 3,
      "queryable_id": 5
    },
    "Bigquery.C6": {
      "coso": "Directive",
      "nist_csf": "Identify",
      "objective": "Bigquery.CO4",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Maintain a list of authorized IAM entities allowed to access the tables, views, and table data in a specific dataset (note: columns can be made case-sensitive, and a default value can be set for the columns).",
      "testing": "Request the list of authorized IAM entities allowed to access the tables, views, and table data in a specific dataset, its review process, and its review records.",
      "effort": "Very Low",
      "mitigate": [
        {
          "threat": "Bigquery.T2",
          "impact": "Very Low",
          "priority": 1.0,
          "max_dependency": 3.0,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T3",
          "impact": "Very Low",
          "priority": 1.0,
          "max_dependency": 3.0,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T5",
          "impact": "Very Low",
          "priority": 1.0,
          "max_dependency": 3.0,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T6",
          "impact": "Very Low",
          "priority": 1.0,
          "max_dependency": 3.0,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T8",
          "impact": "Very Low",
          "priority": 1.0,
          "max_dependency": 3.0,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T9",
          "impact": "Very Low",
          "priority": 1.0,
          "max_dependency": 3.0,
          "priority_overall": 3.0,
          "cvss": "High"
        },
        {
          "threat": "Bigquery.T11",
          "impact": "Very Low",
          "priority": 1.0,
          "max_dependency": 3.0,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T21",
          "impact": "Very Low",
          "priority": 1.0,
          "max_dependency": 3.0,
          "priority_overall": 3.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC1",
        "Bigquery.FC2",
        "Bigquery.FC3"
      ],
      "weighted_priority": "High",
      "weighted_priority_score": 3,
      "queryable_objective_id": 4,
      "queryable_id": 6
    },
    "Bigquery.C7": {
      "coso": "Directive",
      "nist_csf": "Protect",
      "objective": "Bigquery.CO4",
      "retired": "false",
      "assured_by": "Bigquery.C8",
      "depends_on": "Bigquery.C6",
      "description": "Ensure only authorized IAM entities are allowed to access the tables, views, and table data in each dataset.",
      "testing": "Request 1) the mechanism ensuring only authorized IAM entities are allowed to access the tables, views, and table data in a specific dataset, 2) its records of execution for all new IAM entities, and 3) the plan to move any older IAM entities.",
      "effort": "Medium",
      "mitigate": [
        {
          "threat": "Bigquery.T2",
          "impact": "High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T3",
          "impact": "High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T5",
          "impact": "High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T6",
          "impact": "High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T8",
          "impact": "High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T9",
          "impact": "High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "High"
        },
        {
          "threat": "Bigquery.T11",
          "impact": "High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T21",
          "impact": "Medium",
          "priority": 2.0,
          "max_dependency": null,
          "priority_overall": 2.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC1",
        "Bigquery.FC2",
        "Bigquery.FC3"
      ],
      "weighted_priority": "High",
      "weighted_priority_score": 3,
      "queryable_objective_id": 4,
      "queryable_id": 7
    },
    "Bigquery.C8": {
      "coso": "Assurance",
      "nist_csf": "Detect",
      "objective": "Bigquery.CO4",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Verify only authorized IAM entities are allowed to access the tables, views, and table data in each dataset.",
      "testing": "Configure an unauthorized IAM entity to have access to 1) a table or 2) a view; it should be detected.",
      "effort": "Low",
      "mitigate": [],
      "feature_class": [
        "Bigquery.FC1",
        "Bigquery.FC2",
        "Bigquery.FC3"
      ],
      "weighted_priority": "High",
      "weighted_priority_score": 3,
      "queryable_objective_id": 4,
      "queryable_id": 8
    },
    "Bigquery.C9": {
      "coso": "Directive",
      "nist_csf": "Identify",
      "objective": "Bigquery.CO5",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Define the criteria for the sensitivity of columns in each table.",
      "testing": "Request the criteria for the sensitivity of columns in a table.",
      "effort": "Very Low",
      "mitigate": [
        {
          "threat": "Bigquery.T2",
          "impact": "Very Low",
          "priority": 1.0,
          "max_dependency": 3.0,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T8",
          "impact": "Very Low",
          "priority": 1.0,
          "max_dependency": 3.0,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T9",
          "impact": "Very Low",
          "priority": 1.0,
          "max_dependency": 3.0,
          "priority_overall": 3.0,
          "cvss": "High"
        },
        {
          "threat": "Bigquery.T26",
          "impact": "Very Low",
          "priority": 1.0,
          "max_dependency": 3.0,
          "priority_overall": 3.0,
          "cvss": "Low"
        }
      ],
      "feature_class": [
        "Bigquery.FC1",
        "Bigquery.FC2",
        "Bigquery.FC3"
      ],
      "weighted_priority": "High",
      "weighted_priority_score": 3,
      "queryable_objective_id": 5,
      "queryable_id": 9
    },
    "Bigquery.C10": {
      "coso": "Directive",
      "nist_csf": "Protect",
      "objective": "Bigquery.CO5",
      "retired": "false",
      "assured_by": "Bigquery.C11",
      "depends_on": "Bigquery.C9",
      "description": "Ensure only authorized IAM entities are allowed to access sensitive columns of a table (e.g., using BigQuery column-level security, column-level data masking, custom masking routines, restriction analysis rule, list overlap analysis rule, aggregation threshold analysis rule, differential privacy clause, or data clean rooms).",
      "testing": "Request 1) the mechanism ensuring only authorized IAM entities are allowed to access sensitive columns of a table, 2) its records of execution for all new IAM entities, and 3) the plan to move any older IAM entities.",
      "effort": "Medium",
      "mitigate": [
        {
          "threat": "Bigquery.T2",
          "impact": "High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T8",
          "impact": "Medium",
          "priority": 2.0,
          "max_dependency": null,
          "priority_overall": 2.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T9",
          "impact": "Medium",
          "priority": 2.0,
          "max_dependency": null,
          "priority_overall": 2.0,
          "cvss": "High"
        },
        {
          "threat": "Bigquery.T26",
          "impact": "Medium",
          "priority": 2.0,
          "max_dependency": null,
          "priority_overall": 2.0,
          "cvss": "Low"
        }
      ],
      "feature_class": [
        "Bigquery.FC1",
        "Bigquery.FC2",
        "Bigquery.FC3"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 5,
      "queryable_id": 10
    },
    "Bigquery.C11": {
      "coso": "Assurance",
      "nist_csf": "Detect",
      "objective": "Bigquery.CO5",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Verify only authorized IAM entities are allowed to access sensitive columns of each table.",
      "testing": "Configure an unauthorized IAM entity with access to a sensitive column; it should be detected.",
      "effort": "Low",
      "mitigate": [],
      "feature_class": [
        "Bigquery.FC1",
        "Bigquery.FC2",
        "Bigquery.FC3"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 5,
      "queryable_id": 11
    },
    "Bigquery.C12": {
      "coso": "Directive",
      "nist_csf": "Identify",
      "objective": "Bigquery.CO6",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Define the criteria for the sensitivity of rows in each table.",
      "testing": "Request the criteria for the sensitivity of rows in a table.",
      "effort": "Very Low",
      "mitigate": [
        {
          "threat": "Bigquery.T2",
          "impact": "Very Low",
          "priority": 1.0,
          "max_dependency": 2.0,
          "priority_overall": 2.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T8",
          "impact": "Very Low",
          "priority": 1.0,
          "max_dependency": 2.0,
          "priority_overall": 2.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T9",
          "impact": "Very Low",
          "priority": 1.0,
          "max_dependency": 2.0,
          "priority_overall": 2.0,
          "cvss": "High"
        }
      ],
      "feature_class": [
        "Bigquery.FC1",
        "Bigquery.FC2",
        "Bigquery.FC3"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 6,
      "queryable_id": 12
    },
    "Bigquery.C13": {
      "coso": "Directive",
      "nist_csf": "Protect",
      "objective": "Bigquery.CO6",
      "retired": "false",
      "assured_by": "Bigquery.C14",
      "depends_on": "Bigquery.C12",
      "description": "Ensure only authorized IAM entities are allowed to access sensitive rows of a table (e.g., using BigQuery row-level security).",
      "testing": "Request 1) the mechanism ensuring only authorized IAM entities are allowed to access sensitive rows of a table, 2) its records of execution for all new IAM entities, and 3) the plan to move any older IAM entities.",
      "effort": "Medium",
      "mitigate": [
        {
          "threat": "Bigquery.T2",
          "impact": "Medium",
          "priority": 2.0,
          "max_dependency": null,
          "priority_overall": 2.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T8",
          "impact": "Medium",
          "priority": 2.0,
          "max_dependency": null,
          "priority_overall": 2.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T9",
          "impact": "Medium",
          "priority": 2.0,
          "max_dependency": null,
          "priority_overall": 2.0,
          "cvss": "High"
        }
      ],
      "feature_class": [
        "Bigquery.FC1",
        "Bigquery.FC2",
        "Bigquery.FC3"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 6,
      "queryable_id": 13
    },
    "Bigquery.C14": {
      "coso": "Assurance",
      "nist_csf": "Detect",
      "objective": "Bigquery.CO6",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Verify only authorized IAM entities are allowed to access sensitive rows of a table.",
      "testing": "Configure an unauthorized IAM entity with access to a sensitive row; it should be detected.",
      "effort": "Low",
      "mitigate": [],
      "feature_class": [
        "Bigquery.FC1",
        "Bigquery.FC2",
        "Bigquery.FC3"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 6,
      "queryable_id": 14
    },
    "Bigquery.C15": {
      "coso": "Directive",
      "nist_csf": "Protect",
      "objective": "Bigquery.CO8",
      "retired": "false",
      "assured_by": "Bigquery.C16",
      "depends_on": "",
      "description": "Ensure no dataset is accessible to \"AllUsers\" or \"AllAuthenticatedUsers\", except if allowed.",
      "testing": "Request 1) the mechanism ensuring no dataset is accessible to \"AllUsers\" or \"AllAuthenticatedUsers\", 2) its records of execution for all datasets, and 3) the plan to move any older datasets.",
      "effort": "Low",
      "mitigate": [
        {
          "threat": "Bigquery.T8",
          "impact": "High",
          "priority": 4.0,
          "max_dependency": null,
          "priority_overall": 4.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T9",
          "impact": "High",
          "priority": 4.0,
          "max_dependency": null,
          "priority_overall": 4.0,
          "cvss": "High"
        }
      ],
      "feature_class": [
        "Bigquery.FC1",
        "Bigquery.FC2"
      ],
      "weighted_priority": "Very High",
      "weighted_priority_score": 4,
      "queryable_objective_id": 8,
      "queryable_id": 15
    },
    "Bigquery.C16": {
      "coso": "Assurance",
      "nist_csf": "Detect",
      "objective": "Bigquery.CO8",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Verify no dataset is accessible to \"AllUsers\" or \"AllAuthenticatedUsers\" (e.g., using the Security Command Center finding <a href=\"https://cloud.google.com/security-command-center/docs/concepts-vulnerabilities-findings#dataset-findings\"> PUBLIC_DATASET</a>).",
      "testing": "Modify a dataset to allow access to 1) \"AllUsers\", or 2) \"AllAuthenticatedUsers\"; it should be detected.",
      "effort": "Very Low",
      "mitigate": [],
      "feature_class": [
        "Bigquery.FC1",
        "Bigquery.FC2"
      ],
      "weighted_priority": "Very High",
      "weighted_priority_score": 4,
      "queryable_objective_id": 8,
      "queryable_id": 16
    },
    "Bigquery.C17": {
      "coso": "Directive",
      "nist_csf": "Identify",
      "objective": "Bigquery.CO8",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Define the authorized configuration (i.e., defaultTableExpirationMs, defaultPartitionExpirationMs, access[], defaultEncryptionConfiguration, linkedDatasetSource, externalDatasetReference, defaultCollation, defaultRoundingMode, maxTimeTravelHours, storageBillingModel, and defaultEncryptionConfiguration) for each BigQuery dataset.",
      "testing": "Request the authorized configuration for each BigQuery dataset, its review process, and its review records.",
      "effort": "Low",
      "mitigate": [
        {
          "threat": "Bigquery.T8",
          "impact": "Very Low",
          "priority": 0.0,
          "max_dependency": 2.0,
          "priority_overall": 2.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T11",
          "impact": "Very Low",
          "priority": 0.0,
          "max_dependency": 2.0,
          "priority_overall": 2.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T21",
          "impact": "Very Low",
          "priority": 0.0,
          "max_dependency": 2.0,
          "priority_overall": 2.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC1",
        "Bigquery.FC2"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 8,
      "queryable_id": 17
    },
    "Bigquery.C18": {
      "coso": "Directive",
      "nist_csf": "Protect",
      "objective": "Bigquery.CO8",
      "retired": "false",
      "assured_by": "Bigquery.C19",
      "depends_on": "Bigquery.C17",
      "description": "Ensure the configuration of each BigQuery dataset is authorized.",
      "testing": "Request the mechanism ensuring the configuration of each BigQuery dataset is authorized, and the evidence of its execution.",
      "effort": "High",
      "mitigate": [
        {
          "threat": "Bigquery.T8",
          "impact": "High",
          "priority": 2.0,
          "max_dependency": null,
          "priority_overall": 2.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T11",
          "impact": "High",
          "priority": 2.0,
          "max_dependency": null,
          "priority_overall": 2.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T21",
          "impact": "High",
          "priority": 2.0,
          "max_dependency": null,
          "priority_overall": 2.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC1",
        "Bigquery.FC2"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 8,
      "queryable_id": 18
    },
    "Bigquery.C19": {
      "coso": "Assurance",
      "nist_csf": "Detect",
      "objective": "Bigquery.CO8",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Verify all BigQuery datasets have authorized configurations.",
      "testing": "Create a dataset with an unauthorized configuration; it should be detected.",
      "effort": "High",
      "mitigate": [],
      "feature_class": [
        "Bigquery.FC1",
        "Bigquery.FC2"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 8,
      "queryable_id": 19
    },
    "Bigquery.C20": {
      "coso": "Directive",
      "nist_csf": "Protect",
      "objective": "Bigquery.CO9",
      "retired": "false",
      "assured_by": "Bigquery.C21",
      "depends_on": "",
      "description": "Ensure sensitive data is identified and redacted (e.g., using Cloud DLP).",
      "testing": "Request the mechanism to identify and redact sensitive data.",
      "effort": "High",
      "mitigate": [
        {
          "threat": "Bigquery.T6",
          "impact": "High",
          "priority": 2.0,
          "max_dependency": null,
          "priority_overall": 2.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC1"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 9,
      "queryable_id": 20
    },
    "Bigquery.C21": {
      "coso": "Assurance",
      "nist_csf": "Detect",
      "objective": "Bigquery.CO9",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Verify sensitive data is identified and redacted (e.g., using Cloud DLP).",
      "testing": "Do not identify and redact sensitive data; it should be detected.",
      "effort": "High",
      "mitigate": [],
      "feature_class": [
        "Bigquery.FC1"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 9,
      "queryable_id": 21
    },
    "Bigquery.C22": {
      "coso": "Directive",
      "nist_csf": "Identify",
      "objective": "Bigquery.CO10",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Maintain a list of authorized sources and destinations (e.g., Cloud Storage, BigQuery, Vertex AI (for LLM, via BigQuery connection only)) to be used with each table, model, and connection.",
      "testing": "Request the list of all authorized sources and destinations to be used with each table, model, and connection.",
      "effort": "High",
      "mitigate": [
        {
          "threat": "Bigquery.T2",
          "impact": "Very Low",
          "priority": 0.0,
          "max_dependency": 3.0,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T3",
          "impact": "Very Low",
          "priority": 0.0,
          "max_dependency": 3.0,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T15",
          "impact": "Very Low",
          "priority": 0.0,
          "max_dependency": 3.0,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T20",
          "impact": "Very Low",
          "priority": 0.0,
          "max_dependency": 3.0,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T23",
          "impact": "Very Low",
          "priority": 0.0,
          "max_dependency": 3.0,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T24",
          "impact": "Very Low",
          "priority": 0.0,
          "max_dependency": 3.0,
          "priority_overall": 3.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC1",
        "Bigquery.FC3",
        "Bigquery.FC6"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 10,
      "queryable_id": 22
    },
    "Bigquery.C23": {
      "coso": "Directive",
      "nist_csf": "Protect",
      "objective": "Bigquery.CO10",
      "retired": "false",
      "assured_by": "Bigquery.C24",
      "depends_on": "Bigquery.C22",
      "description": "Ensure each table, model, and connection uses authorized sources and destinations.",
      "testing": "Request 1) the mechanism ensuring only authorized sources and destinations are configured, 2) its records of execution for all new sources and destinations, and 3) the plan to move any older sources and destinations.",
      "effort": "Medium",
      "mitigate": [
        {
          "threat": "Bigquery.T2",
          "impact": "High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T3",
          "impact": "High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T15",
          "impact": "High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T20",
          "impact": "High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T23",
          "impact": "High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T24",
          "impact": "High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC1",
        "Bigquery.FC3",
        "Bigquery.FC6"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 10,
      "queryable_id": 23
    },
    "Bigquery.C24": {
      "coso": "Assurance",
      "nist_csf": "Detect",
      "objective": "Bigquery.CO10",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Verify each table, model, and connection use authorized sources and destinations.",
      "testing": "For a BigQuery table, model, and/or connection, use an unauthorized 1) source and 2) destination; it should be detected.",
      "effort": "Medium",
      "mitigate": [],
      "feature_class": [
        "Bigquery.FC1",
        "Bigquery.FC3",
        "Bigquery.FC6"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 10,
      "queryable_id": 24
    },
    "Bigquery.C25": {
      "coso": "Directive",
      "nist_csf": "Protect",
      "objective": "Bigquery.CO10",
      "retired": "false",
      "assured_by": "",
      "depends_on": "Bigquery.C22",
      "description": "Protect the sources and destinations used for infiltration/exfiltration with each table and connection, using their respective services' ThreatModel.",
      "testing": "Request how the respective source and destination ThreatModel are applied to BigQuery.",
      "effort": "High",
      "mitigate": [
        {
          "threat": "Bigquery.T2",
          "impact": "High",
          "priority": 2.0,
          "max_dependency": null,
          "priority_overall": 2.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T3",
          "impact": "High",
          "priority": 2.0,
          "max_dependency": null,
          "priority_overall": 2.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T15",
          "impact": "High",
          "priority": 2.0,
          "max_dependency": null,
          "priority_overall": 2.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC1",
        "Bigquery.FC3"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 10,
      "queryable_id": 25
    },
    "Bigquery.C26": {
      "coso": "Directive",
      "nist_csf": "Identify",
      "objective": "Bigquery.CO7",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Maintain a list of authorized CMEKs to be used with each BigQuery dataset and model, ideally dedicated.",
      "testing": "Request the list of authorized CMEKs to be used by the BigQuery dataset and model, its review process, and its review records.",
      "effort": "Very Low",
      "mitigate": [
        {
          "threat": "Bigquery.T3",
          "impact": "Very Low",
          "priority": 1.0,
          "max_dependency": 2.0,
          "priority_overall": 2.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T11",
          "impact": "Very Low",
          "priority": 1.0,
          "max_dependency": 2.0,
          "priority_overall": 2.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T20",
          "impact": "Very Low",
          "priority": 1.0,
          "max_dependency": 2.0,
          "priority_overall": 2.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC1"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 7,
      "queryable_id": 26
    },
    "Bigquery.C27": {
      "coso": "Directive",
      "nist_csf": "Protect",
      "objective": "Bigquery.CO7",
      "retired": "false",
      "assured_by": "Bigquery.C29",
      "depends_on": "Bigquery.C26",
      "description": "Ensure only authorized CMEKs are used with each BigQuery dataset and model (e.g., using <a href=\"https://cloud.google.com/bigquery/docs/default-configuration\">default configuration</a>), and any unauthorized CMEKs are restricted following the Cloud KMS ThreatModel.",
      "testing": "Request 1) the mechanism ensuring only authorized CMEKs are configured, 2) its records of execution for all new CMEKs, 3) the plan to move any older CMEKs, 4) the mechanism ensuring unauthorized CMEKs are restricted, and its records of execution.",
      "effort": "Medium",
      "mitigate": [
        {
          "threat": "Bigquery.T11",
          "impact": "Medium",
          "priority": 2.0,
          "max_dependency": null,
          "priority_overall": 2.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T20",
          "impact": "Medium",
          "priority": 2.0,
          "max_dependency": null,
          "priority_overall": 2.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC1"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 7,
      "queryable_id": 27
    },
    "Bigquery.C28": {
      "coso": "Directive",
      "nist_csf": "Protect",
      "objective": "Bigquery.CO7",
      "retired": "false",
      "assured_by": "",
      "depends_on": "Bigquery.C26",
      "description": "Protect the CMEKs used by BigQuery datasets and models, using the Cloud KMS ThreatModel.",
      "testing": "Request how the Cloud KMS ThreatModel is applied to BigQuery datasets and models.",
      "effort": "High",
      "mitigate": [
        {
          "threat": "Bigquery.T3",
          "impact": "Medium",
          "priority": 1.0,
          "max_dependency": null,
          "priority_overall": 1.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T11",
          "impact": "Medium",
          "priority": 1.0,
          "max_dependency": null,
          "priority_overall": 1.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T20",
          "impact": "Medium",
          "priority": 1.0,
          "max_dependency": null,
          "priority_overall": 1.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC1"
      ],
      "weighted_priority": "Low",
      "weighted_priority_score": 1,
      "queryable_objective_id": 7,
      "queryable_id": 28
    },
    "Bigquery.C29": {
      "coso": "Assurance",
      "nist_csf": "Detect",
      "objective": "Bigquery.CO7",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Verify each BigQuery dataset and each model are encrypted using an authorized CMEK.",
      "testing": "Use unauthorized CMEK with a BigQuery dataset or model; it should be detected.",
      "effort": "Low",
      "mitigate": [],
      "feature_class": [
        "Bigquery.FC1"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 7,
      "queryable_id": 29
    },
    "Bigquery.C30": {
      "coso": "Directive",
      "nist_csf": "Protect",
      "objective": "Bigquery.CO11",
      "retired": "false",
      "assured_by": "Bigquery.C31",
      "depends_on": "",
      "description": "Ensure the <a href=\"https://cloud.google.com/bigquery/quotas\">quotas</a> on BigQuery (e.g., query limits, streaming insert limits, etc.) are set as per the API usage statistics.",
      "testing": "Request the mechanism to ensure the <a href=\"https://cloud.google.com/bigquery/quotas\">quotas</a> on BigQuery (e.g., query limits, streaming insert limits, etc.) are set as per the API usage statistics.",
      "effort": "High",
      "mitigate": [
        {
          "threat": "Bigquery.T7",
          "impact": "High",
          "priority": 2.0,
          "max_dependency": null,
          "priority_overall": 2.0,
          "cvss": "Low"
        }
      ],
      "feature_class": [
        "Bigquery.FC1"
      ],
      "weighted_priority": "Very Low",
      "weighted_priority_score": 0,
      "queryable_objective_id": 11,
      "queryable_id": 30
    },
    "Bigquery.C31": {
      "coso": "Assurance",
      "nist_csf": "Detect",
      "objective": "Bigquery.CO11",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Verify the quotas on BigQuery are set as per the API usage statistics.",
      "testing": "Do not set the quotas on BigQuery as per the API usage statistics; it should be detected.",
      "effort": "High",
      "mitigate": [],
      "feature_class": [
        "Bigquery.FC1"
      ],
      "weighted_priority": "Very Low",
      "weighted_priority_score": 0,
      "queryable_objective_id": 11,
      "queryable_id": 31
    },
    "Bigquery.C32": {
      "coso": "Directive",
      "nist_csf": "Identify",
      "objective": "Bigquery.CO12",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Define the requirements for the expiration time of each BigQuery table.",
      "testing": "Request the requirement for the expiration time of each BigQuery table.",
      "effort": "Low",
      "mitigate": [
        {
          "threat": "Bigquery.T11",
          "impact": "Very Low",
          "priority": 0.0,
          "max_dependency": 2.0,
          "priority_overall": 2.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC1"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 12,
      "queryable_id": 32
    },
    "Bigquery.C33": {
      "coso": "Directive",
      "nist_csf": "Protect",
      "objective": "Bigquery.CO12",
      "retired": "false",
      "assured_by": "Bigquery.C34",
      "depends_on": "Bigquery.C32",
      "description": "Ensure the expiration time of each BigQuery table is set according to its requirements.",
      "testing": "Request the mechanism ensuring the expiration time of each BigQuery table is set according to its requirements.",
      "effort": "Medium",
      "mitigate": [
        {
          "threat": "Bigquery.T11",
          "impact": "Medium",
          "priority": 2.0,
          "max_dependency": null,
          "priority_overall": 2.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC1"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 12,
      "queryable_id": 33
    },
    "Bigquery.C34": {
      "coso": "Assurance",
      "nist_csf": "Detect",
      "objective": "Bigquery.CO12",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Verify the expiration time of each BigQuery table is set to its requirements.",
      "testing": "Set the expiration time of a BigQuery table to be outside its requirements; it should be detected.",
      "effort": "High",
      "mitigate": [],
      "feature_class": [
        "Bigquery.FC1"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 12,
      "queryable_id": 34
    },
    "Bigquery.C35": {
      "coso": "Detective",
      "nist_csf": "Detect",
      "objective": "Bigquery.CO13",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Monitor slot consumption (e.g., using slot recommender), job concurrency, job execution time, job errors, and bytes processed across the entire organization (e.g., using BigQuery Admin Resource Charts).",
      "testing": "Stop a job using slots; it should be detected.",
      "effort": "Low",
      "mitigate": [
        {
          "threat": "Bigquery.T12",
          "impact": "Medium",
          "priority": 2.0,
          "max_dependency": null,
          "priority_overall": 2.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC5"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 13,
      "queryable_id": 35
    },
    "Bigquery.C36": {
      "coso": "Directive",
      "nist_csf": "Protect",
      "objective": "Bigquery.CO7",
      "retired": "false",
      "assured_by": "Bigquery.C37",
      "depends_on": "Bigquery.C26",
      "description": "Ensure <a href=\"https://cloud.google.com/bigquery/docs/column-key-encrypt\">AEAD encryption functions</a> are used to encrypt data at the column level.",
      "testing": "Request the mechanism ensuring AEAD encryption functions are used to encrypt data at the column level.",
      "effort": "Medium",
      "mitigate": [
        {
          "threat": "Bigquery.T11",
          "impact": "Medium",
          "priority": 2.0,
          "max_dependency": null,
          "priority_overall": 2.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC1"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 7,
      "queryable_id": 36
    },
    "Bigquery.C37": {
      "coso": "Assurance",
      "nist_csf": "Detect",
      "objective": "Bigquery.CO7",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Verify AEAD encryption functions are used to encrypt data at the column level.",
      "testing": "Do not encrypt the data at the column level; it should be detected.",
      "effort": "Low",
      "mitigate": [],
      "feature_class": [
        "Bigquery.FC1"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 7,
      "queryable_id": 37
    },
    "Bigquery.C38": {
      "coso": "Directive",
      "nist_csf": "Identify",
      "objective": "Bigquery.CO14",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Define the requirements for using BigQuery Omni (AWS and/or Azure).",
      "testing": "Request the requirement for the usage of BigQuery Omni.",
      "effort": "Low",
      "mitigate": [
        {
          "threat": "Bigquery.T15",
          "impact": "Very Low",
          "priority": 0.0,
          "max_dependency": 4.0,
          "priority_overall": 4.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC3"
      ],
      "weighted_priority": "High",
      "weighted_priority_score": 3,
      "queryable_objective_id": 14,
      "queryable_id": 38
    },
    "Bigquery.C39": {
      "coso": "Directive",
      "nist_csf": "Protect",
      "objective": "Bigquery.CO14",
      "retired": "false",
      "assured_by": "Bigquery.C40",
      "depends_on": "Bigquery.C38",
      "description": "Ensure the usage of BigQuery Omni as per the requirements (e.g., using organizational constraint <a href=\"https://cloud.google.com/resource-manager/docs/organization-policy/org-policy-constraints#available_constraints\">constraints/bigquery.disableBQOmniAWS</a> and <a href=\"https://cloud.google.com/resource-manager/docs/organization-policy/org-policy-constraints#available_constraints\">constraints/bigquery.disableBQOmniAzure</a>).",
      "testing": "Request the implementation to ensure the usage of BigQuery Omni as per the requirements, and its records of execution.",
      "effort": "Medium",
      "mitigate": [
        {
          "threat": "Bigquery.T15",
          "impact": "Very High",
          "priority": 4.0,
          "max_dependency": null,
          "priority_overall": 4.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC3"
      ],
      "weighted_priority": "High",
      "weighted_priority_score": 3,
      "queryable_objective_id": 14,
      "queryable_id": 39
    },
    "Bigquery.C40": {
      "coso": "Assurance",
      "nist_csf": "Detect",
      "objective": "Bigquery.CO14",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Verify the usage of BigQuery Omni as per the requirements.",
      "testing": "Use BigQuery Omni outside the requirement; it should be detected.",
      "effort": "Low",
      "mitigate": [],
      "feature_class": [
        "Bigquery.FC3"
      ],
      "weighted_priority": "High",
      "weighted_priority_score": 3,
      "queryable_objective_id": 14,
      "queryable_id": 40
    },
    "Bigquery.C41": {
      "coso": "Directive",
      "nist_csf": "Protect",
      "objective": "Bigquery.CO15",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Ensure Cloud Audit logs for BigQuery Data Transfer are enabled (<a href=\"https://cloud.google.com/bigquery-transfer/docs/audit-logging\">ref</a>).",
      "testing": "Request the implementation for enabling the Cloud Audit logs for BigQuery Data Transfer and its records for execution.",
      "effort": "Medium",
      "mitigate": [
        {
          "threat": "Bigquery.T13",
          "impact": "Low",
          "priority": 1.0,
          "max_dependency": null,
          "priority_overall": 1.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC4"
      ],
      "weighted_priority": "Low",
      "weighted_priority_score": 1,
      "queryable_objective_id": 15,
      "queryable_id": 41
    },
    "Bigquery.C42": {
      "coso": "Detective",
      "nist_csf": "Detect",
      "objective": "Bigquery.CO16",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Monitor the abnormal number of concurrent connections and throughput for the BigQuery table (e.g., by using the Monitoring metric CONSUMER QUOTA - QUOTA LIMIT).",
      "testing": "Ingest a large amount of data into a BigQuery table; it should be detected.",
      "effort": "Low",
      "mitigate": [
        {
          "threat": "Bigquery.T4",
          "impact": "Low",
          "priority": 1.0,
          "max_dependency": null,
          "priority_overall": 1.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T5",
          "impact": "Very Low",
          "priority": 0.0,
          "max_dependency": null,
          "priority_overall": 0.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC1",
        "Bigquery.FC6"
      ],
      "weighted_priority": "Low",
      "weighted_priority_score": 1,
      "queryable_objective_id": 16,
      "queryable_id": 42
    },
    "Bigquery.C43": {
      "coso": "Detective",
      "nist_csf": "Detect",
      "objective": "Bigquery.CO13",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Monitor slot capacity (e.g., using slot estimator) to estimate the correct number of slots for the BigQuery workload.",
      "testing": "Stop unnecessary slots; it should be detected.",
      "effort": "Low",
      "mitigate": [
        {
          "threat": "Bigquery.T12",
          "impact": "Low",
          "priority": 1.0,
          "max_dependency": null,
          "priority_overall": 1.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC5"
      ],
      "weighted_priority": "Low",
      "weighted_priority_score": 1,
      "queryable_objective_id": 13,
      "queryable_id": 43
    },
    "Bigquery.C44": {
      "coso": "Directive",
      "nist_csf": "Identify",
      "objective": "Bigquery.CO5",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Define the criteria to use authorized data policies for each column in each table.",
      "testing": "Request the criteria for using data policies for each column in each table.",
      "effort": "Very Low",
      "mitigate": [
        {
          "threat": "Bigquery.T2",
          "impact": "Very Low",
          "priority": 1.0,
          "max_dependency": 2.0,
          "priority_overall": 2.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T17",
          "impact": "Very Low",
          "priority": 1.0,
          "max_dependency": 2.0,
          "priority_overall": 2.0,
          "cvss": "Low"
        }
      ],
      "feature_class": [
        "Bigquery.FC3",
        "Bigquery.FC8"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 5,
      "queryable_id": 44
    },
    "Bigquery.C45": {
      "coso": "Directive",
      "nist_csf": "Protect",
      "objective": "Bigquery.CO5",
      "retired": "false",
      "assured_by": "Bigquery.C46",
      "depends_on": "Bigquery.C44",
      "description": "Ensure only authorized IAM entities are allowed to access sensitive columns of a table by using data policies.",
      "testing": "Request 1) the mechanism ensuring only authorized IAM entities are allowed to access sensitive columns of a table, 2) its records of execution for all new IAM entities, and 3) the plan to move any older IAM entities.",
      "effort": "Medium",
      "mitigate": [
        {
          "threat": "Bigquery.T2",
          "impact": "Medium",
          "priority": 2.0,
          "max_dependency": null,
          "priority_overall": 2.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T17",
          "impact": "Medium",
          "priority": 2.0,
          "max_dependency": null,
          "priority_overall": 2.0,
          "cvss": "Low"
        }
      ],
      "feature_class": [
        "Bigquery.FC3",
        "Bigquery.FC8"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 5,
      "queryable_id": 45
    },
    "Bigquery.C46": {
      "coso": "Assurance",
      "nist_csf": "Detect",
      "objective": "Bigquery.CO5",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Verify only authorized IAM entities are allowed to access sensitive columns of a table.",
      "testing": "Configure an unauthorized IAM entity with access to a sensitive column; it should be detected.",
      "effort": "Low",
      "mitigate": [],
      "feature_class": [
        "Bigquery.FC3",
        "Bigquery.FC8"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 5,
      "queryable_id": 46
    },
    "Bigquery.C47": {
      "coso": "Directive",
      "nist_csf": "Identify",
      "objective": "Bigquery.CO17",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Define the requirements to register the BigQuery models with the Vertex AI Model Registry for each BigQuery model.",
      "testing": "Request the registration requirements for each BigQuery model.",
      "effort": "Low",
      "mitigate": [
        {
          "threat": "Bigquery.T18",
          "impact": "Very Low",
          "priority": 0.0,
          "max_dependency": 2.0,
          "priority_overall": 2.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC6"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 17,
      "queryable_id": 47
    },
    "Bigquery.C48": {
      "coso": "Directive",
      "nist_csf": "Protect",
      "objective": "Bigquery.CO17",
      "retired": "false",
      "assured_by": "Bigquery.C49",
      "depends_on": "Bigquery.C47",
      "description": "Ensure each BigQuery model is registered with the Vertex AI Model Registry according to its requirement.",
      "testing": "Request the mechanism ensuring the BigQuery model is registered according to its requirements, and the evidence of its execution.",
      "effort": "High",
      "mitigate": [
        {
          "threat": "Bigquery.T18",
          "impact": "High",
          "priority": 2.0,
          "max_dependency": null,
          "priority_overall": 2.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC6"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 17,
      "queryable_id": 48
    },
    "Bigquery.C49": {
      "coso": "Assurance",
      "nist_csf": "Detect",
      "objective": "Bigquery.CO17",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Verify all BigQuery models are registered with the Vertex AI Model Registry according to their requirements.",
      "testing": "Register a model with a Vertex AI Model Registry outside the requirements; it should be detected.",
      "effort": "High",
      "mitigate": [],
      "feature_class": [
        "Bigquery.FC6"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 17,
      "queryable_id": 49
    },
    "Bigquery.C50": {
      "coso": "Directive",
      "nist_csf": "Identify",
      "objective": "Bigquery.CO18",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Define the requirements for setting the time travel of each BigQuery dataset.",
      "testing": "Request the requirement for setting the time travel of each BigQuery dataset.",
      "effort": "Low",
      "mitigate": [
        {
          "threat": "Bigquery.T19",
          "impact": "Very Low",
          "priority": 0.0,
          "max_dependency": 2.0,
          "priority_overall": 2.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC1"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 18,
      "queryable_id": 50
    },
    "Bigquery.C51": {
      "coso": "Directive",
      "nist_csf": "Protect",
      "objective": "Bigquery.CO18",
      "retired": "false",
      "assured_by": "Bigquery.C52",
      "depends_on": "Bigquery.C50",
      "description": "Ensure the time travel of each BigQuery dataset is set according to its requirements.",
      "testing": "Request the mechanism ensuring the time travel of each BigQuery dataset is set according to its requirements.",
      "effort": "Medium",
      "mitigate": [
        {
          "threat": "Bigquery.T19",
          "impact": "Medium",
          "priority": 2.0,
          "max_dependency": null,
          "priority_overall": 2.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC1"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 18,
      "queryable_id": 51
    },
    "Bigquery.C52": {
      "coso": "Assurance",
      "nist_csf": "Detect",
      "objective": "Bigquery.CO18",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Verify the time travel of each BigQuery dataset is set to its requirements.",
      "testing": "Set the time travel of a BigQuery dataset to an unauthorized value; it should be detected.",
      "effort": "High",
      "mitigate": [],
      "feature_class": [
        "Bigquery.FC1"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 18,
      "queryable_id": 52
    },
    "Bigquery.C53": {
      "coso": "Directive",
      "nist_csf": "Identify",
      "objective": "Bigquery.CO19",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Define the authorized configuration for each job.",
      "testing": "Request the authorized configuration for each job, its review process, and its review records.",
      "effort": "Low",
      "mitigate": [
        {
          "threat": "Bigquery.T19",
          "impact": "Very Low",
          "priority": 0.0,
          "max_dependency": 2.0,
          "priority_overall": 2.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T26",
          "impact": "Very Low",
          "priority": 0.0,
          "max_dependency": 2.0,
          "priority_overall": 2.0,
          "cvss": "Low"
        }
      ],
      "feature_class": [
        "Bigquery.FC1"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 19,
      "queryable_id": 53
    },
    "Bigquery.C54": {
      "coso": "Directive",
      "nist_csf": "Protect",
      "objective": "Bigquery.CO19",
      "retired": "false",
      "assured_by": "Bigquery.C55",
      "depends_on": "Bigquery.C53",
      "description": "Ensure each job uses an authorized configuration.",
      "testing": "Request the mechanism ensuring the job uses an authorized configuration and the evidence of its execution.",
      "effort": "High",
      "mitigate": [
        {
          "threat": "Bigquery.T19",
          "impact": "High",
          "priority": 2.0,
          "max_dependency": null,
          "priority_overall": 2.0,
          "cvss": "Medium"
        },
        {
          "threat": "Bigquery.T26",
          "impact": "High",
          "priority": 2.0,
          "max_dependency": null,
          "priority_overall": 2.0,
          "cvss": "Low"
        }
      ],
      "feature_class": [
        "Bigquery.FC1"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 19,
      "queryable_id": 54
    },
    "Bigquery.C55": {
      "coso": "Assurance",
      "nist_csf": "Detect",
      "objective": "Bigquery.CO19",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Verify all jobs use an authorized configuration.",
      "testing": "Use an unauthorized configuration with a job; it should be detected.",
      "effort": "High",
      "mitigate": [],
      "feature_class": [
        "Bigquery.FC1"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 19,
      "queryable_id": 55
    },
    "Bigquery.C56": {
      "coso": "Detective",
      "nist_csf": "Detect",
      "objective": "Bigquery.CO20",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Monitor the abnormal behavior of a query (e.g., by using the query execution graph).",
      "testing": "Run a query with abnormal behavior; it should be detected.",
      "effort": "Low",
      "mitigate": [
        {
          "threat": "Bigquery.T9",
          "impact": "Medium",
          "priority": 2.0,
          "max_dependency": null,
          "priority_overall": 2.0,
          "cvss": "High"
        }
      ],
      "feature_class": [
        "Bigquery.FC1"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 20,
      "queryable_id": 56
    },
    "Bigquery.C57": {
      "coso": "Directive",
      "nist_csf": "Identify",
      "objective": "Bigquery.CO21",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Define the requirements for metadata cache mode and staleness (30 minutes to 7 days) for each external table.",
      "testing": "Request the requirement for enabling metadata cache and setting its staleness (30 minutes - 7 days) for each external table.",
      "effort": "Low",
      "mitigate": [
        {
          "threat": "Bigquery.T9",
          "impact": "Very Low",
          "priority": 0.0,
          "max_dependency": 2.0,
          "priority_overall": 2.0,
          "cvss": "High"
        }
      ],
      "feature_class": [
        "Bigquery.FC1"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 21,
      "queryable_id": 57
    },
    "Bigquery.C58": {
      "coso": "Directive",
      "nist_csf": "Protect",
      "objective": "Bigquery.CO21",
      "retired": "false",
      "assured_by": "Bigquery.C59",
      "depends_on": "Bigquery.C57",
      "description": "Ensure the metadata cache mode and staleness of each external table are set according to their requirements.",
      "testing": "Request the mechanism ensuring the metadata cache mode and staleness of each external table are set according to their requirements.",
      "effort": "Medium",
      "mitigate": [
        {
          "threat": "Bigquery.T9",
          "impact": "Medium",
          "priority": 2.0,
          "max_dependency": null,
          "priority_overall": 2.0,
          "cvss": "High"
        }
      ],
      "feature_class": [
        "Bigquery.FC1"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 21,
      "queryable_id": 58
    },
    "Bigquery.C59": {
      "coso": "Assurance",
      "nist_csf": "Detect",
      "objective": "Bigquery.CO21",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Verify the metadata cache mode and staleness of each external table are set to their requirements.",
      "testing": "Set the metadata cache mode and staleness of an external table outside the requirements; it should be detected.",
      "effort": "Medium",
      "mitigate": [],
      "feature_class": [
        "Bigquery.FC1"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 21,
      "queryable_id": 59
    },
    "Bigquery.C60": {
      "coso": "Directive",
      "nist_csf": "Identify",
      "objective": "Bigquery.CO8",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Define the authorized configuration for each reservation (i.e., maxSlots, edition, ignoreIdleSlots) and its assignments (i.e., assignee, jobType).",
      "testing": "Request the authorized configuration for each reservation and its assignments.",
      "effort": "Low",
      "mitigate": [
        {
          "threat": "Bigquery.T9",
          "impact": "Very Low",
          "priority": 0.0,
          "max_dependency": 2.0,
          "priority_overall": 2.0,
          "cvss": "High"
        },
        {
          "threat": "Bigquery.T12",
          "impact": "Very Low",
          "priority": 0.0,
          "max_dependency": 2.0,
          "priority_overall": 2.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC1",
        "Bigquery.FC5"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 8,
      "queryable_id": 60
    },
    "Bigquery.C61": {
      "coso": "Directive",
      "nist_csf": "Protect",
      "objective": "Bigquery.CO8",
      "retired": "false",
      "assured_by": "Bigquery.C62",
      "depends_on": "Bigquery.C60",
      "description": "Ensure each reservation and its assignments use an authorized configuration.",
      "testing": "Request the mechanism ensuring the reservation and its assignments use an authorized configuration and the evidence of its execution.",
      "effort": "High",
      "mitigate": [
        {
          "threat": "Bigquery.T12",
          "impact": "High",
          "priority": 2.0,
          "max_dependency": null,
          "priority_overall": 2.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC5"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 8,
      "queryable_id": 61
    },
    "Bigquery.C62": {
      "coso": "Assurance",
      "nist_csf": "Detect",
      "objective": "Bigquery.CO8",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Verify all reservations and their assignments use an authorized configuration.",
      "testing": "Use an unauthorized configuration with 1) a reservation, or 2) an assignment; it should be detected.",
      "effort": "High",
      "mitigate": [],
      "feature_class": [
        "Bigquery.FC5"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 8,
      "queryable_id": 62
    },
    "Bigquery.C63": {
      "coso": "Detective",
      "nist_csf": "Detect",
      "objective": "Bigquery.CO8",
      "retired": "false",
      "assured_by": "",
      "depends_on": "Bigquery.C60",
      "description": "Monitor the creation/modification of unauthorized reservation (e.g., by using Cloud Logging method \"google.cloud.bigquery.reservation.v1.ReservationService.CreateAssignment\" and \"google.cloud.bigquery.reservation.v1.ReservationService.UpdateReservation\", and their fields request.reservation.autoscale.maxSlots and request.reservation.edition).",
      "testing": "Create/update the reservation with unauthorized values; it should be detected.",
      "effort": "Medium",
      "mitigate": [
        {
          "threat": "Bigquery.T12",
          "impact": "Medium",
          "priority": 2.0,
          "max_dependency": null,
          "priority_overall": 2.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC5"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 8,
      "queryable_id": 63
    },
    "Bigquery.C64": {
      "coso": "Detective",
      "nist_csf": "Detect",
      "objective": "Bigquery.CO8",
      "retired": "false",
      "assured_by": "",
      "depends_on": "Bigquery.C60",
      "description": "Monitor the creation of unauthorized assignment (e.g., by using Cloud Logging method \"google.cloud.bigquery.reservation.v1.ReservationService.CreateAssignment\" and its fields request.assignment.assignee, request.assignment.jobType, and request.parent).",
      "testing": "Create the assignment with unauthorized values; it should be detected.",
      "effort": "Medium",
      "mitigate": [
        {
          "threat": "Bigquery.T12",
          "impact": "Medium",
          "priority": 2.0,
          "max_dependency": null,
          "priority_overall": 2.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC5"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 8,
      "queryable_id": 64
    },
    "Bigquery.C65": {
      "coso": "Detective",
      "nist_csf": "Detect",
      "objective": "Bigquery.CO16",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Monitor the quality of data used with the ML models (e.g., by <a href=\"https://cloud.google.com/bigquery/docs/data-profile-scan\">data profiling</a>).",
      "testing": "Ingest bogus data in a table; it should be detected.",
      "effort": "Low",
      "mitigate": [
        {
          "threat": "Bigquery.T4",
          "impact": "Low",
          "priority": 1.0,
          "max_dependency": null,
          "priority_overall": 1.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC6"
      ],
      "weighted_priority": "Low",
      "weighted_priority_score": 1,
      "queryable_objective_id": 16,
      "queryable_id": 65
    },
    "Bigquery.C66": {
      "coso": "Directive",
      "nist_csf": "Identify",
      "objective": "Bigquery.CO22",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Maintain a list of authorized sources (e.g., Cloud Storage, Amazon S3, etc.) and their respective authorized configurations to be used with each transfer.",
      "testing": "Request the list of all authorized sources and their respective authorized configurations to be used with each transfer, its review process, and its review records.",
      "effort": "Low",
      "mitigate": [
        {
          "threat": "Bigquery.T13",
          "impact": "Very Low",
          "priority": 0.0,
          "max_dependency": 3.0,
          "priority_overall": 3.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC4"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 22,
      "queryable_id": 66
    },
    "Bigquery.C67": {
      "coso": "Directive",
      "nist_csf": "Protect",
      "objective": "Bigquery.CO22",
      "retired": "false",
      "assured_by": "Bigquery.C68",
      "depends_on": "Bigquery.C66",
      "description": "Ensure each transfer uses an authorized source and its authorized configuration.",
      "testing": "Request 1) the mechanism ensuring only an authorized source and its authorized configuration is configured, 2) its records of execution for all new sources, and 3) the plan to move any older sources.",
      "effort": "Medium",
      "mitigate": [
        {
          "threat": "Bigquery.T13",
          "impact": "High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC4"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 22,
      "queryable_id": 67
    },
    "Bigquery.C68": {
      "coso": "Assurance",
      "nist_csf": "Detect",
      "objective": "Bigquery.CO22",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Verify each transfer uses an authorized source and its authorized configuration.",
      "testing": "For a transfer, 1) use an unauthorized source, 2) remove an authorized source, or 3) use an unauthorized configuration for a source; it should be detected.",
      "effort": "Medium",
      "mitigate": [],
      "feature_class": [
        "Bigquery.FC4"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 22,
      "queryable_id": 68
    },
    "Bigquery.C69": {
      "coso": "Directive",
      "nist_csf": "Protect",
      "objective": "Bigquery.CO22",
      "retired": "false",
      "assured_by": "",
      "depends_on": "Bigquery.C66",
      "description": "Protect the sources used with each transfer, using the respective service's ThreatModel.",
      "testing": "Request how the respective service ThreatModel is applied to protect each BigQuery Data Transfer source.",
      "effort": "High",
      "mitigate": [
        {
          "threat": "Bigquery.T13",
          "impact": "Medium",
          "priority": 1.0,
          "max_dependency": null,
          "priority_overall": 1.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC4"
      ],
      "weighted_priority": "Low",
      "weighted_priority_score": 1,
      "queryable_objective_id": 22,
      "queryable_id": 69
    },
    "Bigquery.C70": {
      "coso": "Directive",
      "nist_csf": "Identify",
      "objective": "Bigquery.CO23",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Maintain a list of authorized Cloud Storage buckets to be used with query jobs for User-Defined Functions (UDFs).",
      "testing": "Request the list of Cloud Storage buckets used with query jobs for User-Defined Functions (UDFs).",
      "effort": "High",
      "mitigate": [
        {
          "threat": "Bigquery.T20",
          "impact": "Very Low",
          "priority": 0.0,
          "max_dependency": 3.0,
          "priority_overall": 3.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC1"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 23,
      "queryable_id": 70
    },
    "Bigquery.C71": {
      "coso": "Directive",
      "nist_csf": "Protect",
      "objective": "Bigquery.CO23",
      "retired": "false",
      "assured_by": "Bigquery.C72",
      "depends_on": "Bigquery.C70",
      "description": "Ensure each query uses an authorized Cloud Storage bucket for a UDF.",
      "testing": "Request 1) the mechanism ensuring only authorized Cloud Storage bucket is configured, 2) its records of execution for all new Cloud Storage buckets, and 3) the plan to move any older Cloud Storage buckets.",
      "effort": "Medium",
      "mitigate": [
        {
          "threat": "Bigquery.T20",
          "impact": "High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC1"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 23,
      "queryable_id": 71
    },
    "Bigquery.C72": {
      "coso": "Assurance",
      "nist_csf": "Detect",
      "objective": "Bigquery.CO23",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Verify each query uses an authorized Cloud Storage bucket for a UDF.",
      "testing": "For a UDF, use an unauthorized bucket; it should be detected.",
      "effort": "Medium",
      "mitigate": [],
      "feature_class": [
        "Bigquery.FC1"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 23,
      "queryable_id": 72
    },
    "Bigquery.C73": {
      "coso": "Directive",
      "nist_csf": "Protect",
      "objective": "Bigquery.CO23",
      "retired": "false",
      "assured_by": "",
      "depends_on": "Bigquery.C70",
      "description": "Protect the Cloud Storage buckets used for storing UDFs, using Cloud Storage ThreatModel.",
      "testing": "Request how the Cloud Storage ThreatModel is applied to buckets used for storing UDFs.",
      "effort": "High",
      "mitigate": [
        {
          "threat": "Bigquery.T20",
          "impact": "Medium",
          "priority": 1.0,
          "max_dependency": null,
          "priority_overall": 1.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC1"
      ],
      "weighted_priority": "Low",
      "weighted_priority_score": 1,
      "queryable_objective_id": 23,
      "queryable_id": 73
    },
    "Bigquery.C74": {
      "coso": "Directive",
      "nist_csf": "Protect",
      "objective": "Bigquery.CO24",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Enforce secure SDLC process on User-Defined Functions (e.g., using source control, static analysis, dynamic analysis, peer review).",
      "testing": "Request the process and records of enforcing the SDLC process on UDFs to ensure reviews of their code.",
      "effort": "Medium",
      "mitigate": [
        {
          "threat": "Bigquery.T20",
          "impact": "High",
          "priority": 3.0,
          "max_dependency": null,
          "priority_overall": 3.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC1"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 24,
      "queryable_id": 74
    },
    "Bigquery.C75": {
      "coso": "Directive",
      "nist_csf": "Identify",
      "objective": "Bigquery.CO8",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Define the authorized configuration (e.g., createDisposition, writeDisposition, schemaUpdateOptions) for each asynchronous query job.",
      "testing": "Request the authorized configuration for each asynchronous query job, its review process, and its review records.",
      "effort": "Low",
      "mitigate": [
        {
          "threat": "Bigquery.T20",
          "impact": "Very Low",
          "priority": 0.0,
          "max_dependency": 1.0,
          "priority_overall": 1.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC1"
      ],
      "weighted_priority": "Low",
      "weighted_priority_score": 1,
      "queryable_objective_id": 8,
      "queryable_id": 75
    },
    "Bigquery.C76": {
      "coso": "Directive",
      "nist_csf": "Protect",
      "objective": "Bigquery.CO8",
      "retired": "false",
      "assured_by": "Bigquery.C77",
      "depends_on": "Bigquery.C75",
      "description": "Ensure the configuration of each asynchronous query job is authorized.",
      "testing": "Request the mechanism ensuring the configuration of each asynchronous query job is authorized, and the evidence of its execution.",
      "effort": "High",
      "mitigate": [
        {
          "threat": "Bigquery.T20",
          "impact": "Medium",
          "priority": 1.0,
          "max_dependency": null,
          "priority_overall": 1.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC1"
      ],
      "weighted_priority": "Low",
      "weighted_priority_score": 1,
      "queryable_objective_id": 8,
      "queryable_id": 76
    },
    "Bigquery.C77": {
      "coso": "Assurance",
      "nist_csf": "Detect",
      "objective": "Bigquery.CO8",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Verify all asynchronous query jobs have authorized configurations.",
      "testing": "Create an asynchronous query job with unauthorized configurations; it should be detected.",
      "effort": "High",
      "mitigate": [],
      "feature_class": [
        "Bigquery.FC1"
      ],
      "weighted_priority": "Low",
      "weighted_priority_score": 1,
      "queryable_objective_id": 8,
      "queryable_id": 77
    },
    "Bigquery.C78": {
      "coso": "Directive",
      "nist_csf": "Identify",
      "objective": "Bigquery.CO25",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Define the authorized expiration time for each ML model.",
      "testing": "Request the authorized expiration time for each ML model.",
      "effort": "Low",
      "mitigate": [
        {
          "threat": "Bigquery.T22",
          "impact": "Very Low",
          "priority": 0.0,
          "max_dependency": 2.0,
          "priority_overall": 2.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC6"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 25,
      "queryable_id": 78
    },
    "Bigquery.C79": {
      "coso": "Directive",
      "nist_csf": "Protect",
      "objective": "Bigquery.CO25",
      "retired": "false",
      "assured_by": "Bigquery.C80",
      "depends_on": "Bigquery.C78",
      "description": "Ensure the expiration time for each ML model is authorized.",
      "testing": "Request the mechanism ensuring the expiration time for each ML model is authorized, and the evidence of its execution.",
      "effort": "High",
      "mitigate": [
        {
          "threat": "Bigquery.T22",
          "impact": "High",
          "priority": 2.0,
          "max_dependency": null,
          "priority_overall": 2.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC6"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 25,
      "queryable_id": 79
    },
    "Bigquery.C80": {
      "coso": "Assurance",
      "nist_csf": "Detect",
      "objective": "Bigquery.CO25",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Verify all ML models have an authorized expiration time.",
      "testing": "Create an ML model. With unauthorized expiration time; it should be detected.",
      "effort": "High",
      "mitigate": [],
      "feature_class": [
        "Bigquery.FC6"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 25,
      "queryable_id": 80
    },
    "Bigquery.C81": {
      "coso": "Directive",
      "nist_csf": "Identify",
      "objective": "Bigquery.CO8",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Define the authorized configuration (i.e., schema, clustering, expirationTime, view, materializedView, externalDataConfiguration, encryptionConfiguration, defaultCollation, defaultRoundingMode, and tableConstraints) for each BigQuery table.",
      "testing": "Request the authorized configuration for each BigQuery table, its review process, and its review records.",
      "effort": "Medium",
      "mitigate": [
        {
          "threat": "Bigquery.T25",
          "impact": "Very Low",
          "priority": 0.0,
          "max_dependency": 2.0,
          "priority_overall": 2.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC1"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 8,
      "queryable_id": 81
    },
    "Bigquery.C82": {
      "coso": "Directive",
      "nist_csf": "Protect",
      "objective": "Bigquery.CO8",
      "retired": "false",
      "assured_by": "Bigquery.C83",
      "depends_on": "Bigquery.C81",
      "description": "Ensure the configuration of each BigQuery table is authorized.",
      "testing": "Request the mechanism ensuring the configuration of each BigQuery table is authorized, and the evidence of its execution.",
      "effort": "High",
      "mitigate": [
        {
          "threat": "Bigquery.T25",
          "impact": "High",
          "priority": 2.0,
          "max_dependency": null,
          "priority_overall": 2.0,
          "cvss": "Medium"
        }
      ],
      "feature_class": [
        "Bigquery.FC1"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 8,
      "queryable_id": 82
    },
    "Bigquery.C83": {
      "coso": "Assurance",
      "nist_csf": "Detect",
      "objective": "Bigquery.CO8",
      "retired": "false",
      "assured_by": "",
      "depends_on": "",
      "description": "Verify all BigQuery tables have authorized configurations.",
      "testing": "Create a table with an unauthorized configuration; it should be detected.",
      "effort": "High",
      "mitigate": [],
      "feature_class": [
        "Bigquery.FC1"
      ],
      "weighted_priority": "Medium",
      "weighted_priority_score": 2,
      "queryable_objective_id": 8,
      "queryable_id": 83
    }
  },
  "actions": {
    "Bigquery.A1": {
      "action_description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
      "api": "bigquery.tables.getIamPolicy",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.tables.getIamPolicy",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 1
    },
    "Bigquery.A2": {
      "action_description": "Updates information in an existing table. The update method replaces the entire table resource, whereas the patch method only replaces fields that are provided in the submitted table resource. This method supports patch semantics.",
      "api": "bigquery.tables.patch",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.tables.update",
      "event_name": "google.cloud.bigquery.v2.TableService.PatchTable",
      "stage": "v2",
      "action_id_int": 2
    },
    "Bigquery.A3": {
      "action_description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a not_found error.",
      "api": "bigquery.tables.testIamPermissions",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "-",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 3
    },
    "Bigquery.A4": {
      "action_description": "Updates information in an existing table. The update method replaces the entire table resource, whereas the patch method only replaces fields that are provided in the submitted table resource.",
      "api": "bigquery.tables.update",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.tables.update",
      "event_name": "jobservice.insert,tableservice.update",
      "stage": "v2",
      "action_id_int": 4
    },
    "Bigquery.A5": {
      "action_description": "Creates a new, empty table in the dataset.",
      "api": "bigquery.tables.insert",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.tables.create",
      "event_name": "jobservice.insert,tableservice.insert,google.cloud.bigquery.v2.TableService.InsertTable",
      "stage": "v2",
      "action_id_int": 5
    },
    "Bigquery.A6": {
      "action_description": "Gets the specified table resource by table ID. This method does not return the data in the table, it only returns the table resource, which describes the structure of this table.",
      "api": "bigquery.tables.get",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.tables.get",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 6
    },
    "Bigquery.A7": {
      "action_description": "Sets the access control policy on the specified resource. Replaces any existing policy.",
      "api": "bigquery.tables.setIamPolicy",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.tables.setIamPolicy",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 7
    },
    "Bigquery.A8": {
      "action_description": "Lists all tables in the specified dataset.",
      "api": "bigquery.tables.list",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.tables.list",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 8
    },
    "Bigquery.A9": {
      "action_description": "Deletes the table specified by tableid from the dataset. If the table contains data, all the data will be deleted.",
      "api": "bigquery.tables.delete",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.tables.delete",
      "event_name": "datasetservice.delete,tableservice.delete,google.cloud.bigquery.v2.TableService.DeleteTable",
      "stage": "v2",
      "action_id_int": 9
    },
    "Bigquery.A10": {
      "action_description": "Create new table snapshots.",
      "api": "-",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC7",
      "feature_class_action_type": "core",
      "iam_permission": "bigquery.tables.createSnapshot",
      "event_name": "-",
      "stage": "preview",
      "action_id_int": 10
    },
    "Bigquery.A11": {
      "action_description": "Delete table snapshots.",
      "api": "-",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC7",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.tables.deleteSnapshot",
      "event_name": "-",
      "stage": "preview",
      "action_id_int": 11
    },
    "Bigquery.A12": {
      "action_description": "Export table data out of BigQuery.",
      "api": "-",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.tables.export",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 12
    },
    "Bigquery.A13": {
      "action_description": "Restore table snapshots.",
      "api": "-",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC7",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.tables.restoreSnapshot",
      "event_name": "-",
      "stage": "preview",
      "action_id_int": 13
    },
    "Bigquery.A14": {
      "action_description": "Set policy tags in table schema.",
      "api": "-",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.tables.setCategory",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 14
    },
    "Bigquery.A15": {
      "action_description": "Update tags for a table.",
      "api": "-",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.tables.updateTag",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 15
    },
    "Bigquery.A16": {
      "action_description": "Streams data into BigQuery one record at a time without needing to run a load job.",
      "api": "bigquery.tabledata.insertAll",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.tables.updateData",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 16
    },
    "Bigquery.A17": {
      "action_description": "Retrieves table data from a specified set of rows.",
      "api": "bigquery.tabledata.list",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.tables.getData",
      "event_name": "tabledataservice.list,google.cloud.bigquery.v2.TableDataService.List",
      "stage": "v2",
      "action_id_int": 17
    },
    "Bigquery.A18": {
      "action_description": "Returns information about a specific job. Job information is available for a six-month period after creation.",
      "api": "bigquery.jobs.get",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.jobs.get",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 18
    },
    "Bigquery.A19": {
      "action_description": "Starts a new asynchronous job.",
      "api": "bigquery.jobs.insert",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.jobs.create",
      "event_name": "jobservice.insert,google.cloud.bigquery.v2.JobService.InsertJob",
      "stage": "v2",
      "action_id_int": 19
    },
    "Bigquery.A20": {
      "action_description": "Lists all jobs that you started in the specified project. Job information is available for a six-month period after creation. The job list is sorted in reverse chronological order, by job creation time.",
      "api": "bigquery.jobs.list",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.jobs.list",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 20
    },
    "Bigquery.A21": {
      "action_description": "List all jobs and retrieve metadata on any job submitted by any user.",
      "api": "bigquery.jobs.listAll",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.jobs.listAll",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 21
    },
    "Bigquery.A22": {
      "action_description": "Requests that a job be cancelled. This call will return immediately, and the client will need to poll for the job status to see if the cancel completed successfully.",
      "api": "bigquery.jobs.cancel",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.jobs.update",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 22
    },
    "Bigquery.A23": {
      "action_description": "Requests that a job is deleted. This call will return when the job is deleted. This method is available in limited preview.",
      "api": "bigquery.jobs.delete",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.jobs.delete",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 23
    },
    "Bigquery.A24": {
      "action_description": "Runs a BigQuery SQL query synchronously and returns query results if the query completes within a specified timeout.",
      "api": "bigquery.jobs.query",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.jobs.create",
      "event_name": "google.cloud.bigquery.v2.JobService.Query,jobservice.query",
      "stage": "v2",
      "action_id_int": 24
    },
    "Bigquery.A25": {
      "action_description": "Retrieves the results of a query job.",
      "api": "bigquery.jobs.getQueryResults",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.tables.getData",
      "event_name": "jobservice.getqueryresults",
      "stage": "v2",
      "action_id_int": 25
    },
    "Bigquery.A26": {
      "action_description": "Lists all routines in the specified dataset.",
      "api": "bigquery.routines.list",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC2",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.routines.list",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 26
    },
    "Bigquery.A27": {
      "action_description": "Gets the specified routine resource by routine ID.",
      "api": "bigquery.routines.get",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC2",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.routines.get",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 27
    },
    "Bigquery.A28": {
      "action_description": "Creates a new routine in the dataset.",
      "api": "bigquery.routines.insert",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC2",
      "feature_class_action_type": "core",
      "iam_permission": "bigquery.routines.create",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 28
    },
    "Bigquery.A29": {
      "action_description": "Deletes the routine specified by routineid from the dataset.",
      "api": "bigquery.routines.delete",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC2",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.routines.delete",
      "event_name": "datasetservice.delete",
      "stage": "v2",
      "action_id_int": 29
    },
    "Bigquery.A30": {
      "action_description": "Updates information in an existing routine. The update method replaces the entire routine resource.",
      "api": "bigquery.routines.update",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC2",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.routines.update",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 30
    },
    "Bigquery.A31": {
      "action_description": "Returns the dataset specified by datasetid.",
      "api": "bigquery.datasets.get",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.datasets.get",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 31
    },
    "Bigquery.A32": {
      "action_description": "Updates information in an existing dataset. The update method replaces the entire dataset resource, whereas the patch method only replaces fields that are provided in the submitted dataset resource. This method supports patch semantics.",
      "api": "bigquery.datasets.patch",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.datasets.update",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 32
    },
    "Bigquery.A33": {
      "action_description": "Lists all datasets in the specified project.",
      "api": "bigquery.datasets.list",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.datasets.get",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 33
    },
    "Bigquery.A34": {
      "action_description": "Deletes the dataset specified by the datasetid value. Before you can delete a dataset, you must delete all its tables, either manually or by specifying deletecontents. Immediately after deletion, you can create another dataset with the same name.",
      "api": "bigquery.datasets.delete",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.datasets.delete",
      "event_name": "datasetservice.delete,google.cloud.bigquery.v2.DatasetService.DeleteDataset",
      "stage": "v2",
      "action_id_int": 34
    },
    "Bigquery.A35": {
      "action_description": "Creates a new empty dataset.",
      "api": "bigquery.datasets.insert",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "core",
      "iam_permission": "bigquery.datasets.create",
      "event_name": "datasetservice.insert",
      "stage": "v2",
      "action_id_int": 35
    },
    "Bigquery.A36": {
      "action_description": "Updates information in an existing dataset. The update method replaces the entire dataset resource, whereas the patch method only replaces fields that are provided in the submitted dataset resource.",
      "api": "bigquery.datasets.update",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.datasets.update",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 36
    },
    "Bigquery.A37": {
      "action_description": "Read a dataset's IAM permissions (via the console).",
      "api": "-",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.datasets.getIamPolicy",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 37
    },
    "Bigquery.A38": {
      "action_description": "Change a dataset's IAM permissions (via the console).",
      "api": "-",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.datasets.setIamPolicy",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 38
    },
    "Bigquery.A39": {
      "action_description": "Update tags for a dataset.",
      "api": "-",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.datasets.updateTag",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 39
    },
    "Bigquery.A40": {
      "action_description": "Create a new row-level access policy on a table.",
      "api": "-",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.rowAccessPolicies.create",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 40
    },
    "Bigquery.A41": {
      "action_description": "Delete a row-level access policy from a table.",
      "api": "-",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.rowAccessPolicies.delete",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 41
    },
    "Bigquery.A42": {
      "action_description": "Gets data in a table that you want to be visible only to the members of a row-level access policy's grantee list. We recommend this permission only be granted on a row-level access policy resource.",
      "api": "-",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.rowAccessPolicies.getFilteredData",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 42
    },
    "Bigquery.A43": {
      "action_description": "Re-create a row-level access policy.",
      "api": "-",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.rowAccessPolicies.update",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 43
    },
    "Bigquery.A44": {
      "action_description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a not_found error.",
      "api": "bigquery.rowAccessPolicies.testIamPermissions",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "-",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 44
    },
    "Bigquery.A45": {
      "action_description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
      "api": "bigquery.rowAccessPolicies.getIamPolicy",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.rowAccessPolicies.getIamPolicy",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 45
    },
    "Bigquery.A46": {
      "action_description": "Lists all row access policies on the specified table.",
      "api": "bigquery.rowAccessPolicies.list",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.rowAccessPolicies.list",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 46
    },
    "Bigquery.A47": {
      "action_description": "Sets the access control policy on the specified resource. Replaces any existing policy.",
      "api": "bigquery.rowAccessPolicies.setIamPolicy",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.rowAccessPolicies.setIamPolicy",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 47
    },
    "Bigquery.A48": {
      "action_description": "Returns the email address of the service account for your project used for interactions with Google Cloud KMS.",
      "api": "bigquery.projects.getServiceAccount",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "-",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 48
    },
    "Bigquery.A49": {
      "action_description": "Lists all projects to which you have been granted any project role.",
      "api": "bigquery.projects.list",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "-",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 49
    },
    "Bigquery.A50": {
      "action_description": "Create new models.",
      "api": "-",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC6",
      "feature_class_action_type": "core",
      "iam_permission": "bigquery.models.create",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 50
    },
    "Bigquery.A51": {
      "action_description": "Get model data.",
      "api": "bigquery.models.get",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC6",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.models.getData",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 51
    },
    "Bigquery.A52": {
      "action_description": "Get model metadata.",
      "api": "bigquery.models.get",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC6",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.models.getMetadata",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 52
    },
    "Bigquery.A53": {
      "action_description": "Update model data.",
      "api": "bigquery.models.patch",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC6",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.models.updateData",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 53
    },
    "Bigquery.A54": {
      "action_description": "Update model metadata.",
      "api": "bigquery.models.patch",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC6",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.models.updateMetadata",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 54
    },
    "Bigquery.A55": {
      "action_description": "Deletes the model specified by modelid from the dataset.",
      "api": "bigquery.models.delete",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC6",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.models.delete",
      "event_name": "datasetservice.delete",
      "stage": "v2",
      "action_id_int": 55
    },
    "Bigquery.A56": {
      "action_description": "Lists all models in the specified dataset.",
      "api": "bigquery.models.list",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC6",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.models.list",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 56
    },
    "Bigquery.A57": {
      "action_description": "Export a model.",
      "api": "-",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC6",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.models.export",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 57
    },
    "Bigquery.A58": {
      "action_description": "Create saved queries (console only).",
      "api": "-",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.savedqueries.create",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 58
    },
    "Bigquery.A59": {
      "action_description": "Delete saved queries (console only).",
      "api": "-",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.savedqueries.delete",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 59
    },
    "Bigquery.A60": {
      "action_description": "Get metadata on saved queries (console only).",
      "api": "-",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.savedqueries.get",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 60
    },
    "Bigquery.A61": {
      "action_description": "List saved queries (console only).",
      "api": "-",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.savedqueries.list",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 61
    },
    "Bigquery.A62": {
      "action_description": "Update saved queries (console only).",
      "api": "-",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.savedqueries.update",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 62
    },
    "Bigquery.A63": {
      "action_description": "Use a connection configuration to connect to a remote data source.",
      "api": "-",
      "endpoint": "bigqueryconnection",
      "feature_class": "Bigquery.FC3",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.connections.use",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 63
    },
    "Bigquery.A64": {
      "action_description": "Returns specified connection.",
      "api": "bigqueryconnection.projects.locations.connections.get",
      "endpoint": "bigqueryconnection",
      "feature_class": "Bigquery.FC3",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.connections.get",
      "event_name": "google.cloud.bigquery.connection.v1.ConnectionService.GetConnection",
      "stage": "v1",
      "action_id_int": 64
    },
    "Bigquery.A65": {
      "action_description": "Deletes connection and associated credential.",
      "api": "bigqueryconnection.projects.locations.connections.delete",
      "endpoint": "bigqueryconnection",
      "feature_class": "Bigquery.FC3",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.connections.delete",
      "event_name": "google.cloud.bigquery.connection.v1.ConnectionService.DeleteConnection",
      "stage": "v1",
      "action_id_int": 65
    },
    "Bigquery.A66": {
      "action_description": "Updates the specified connection. For security reasons, also resets credential if connection properties are in the update field mask.",
      "api": "bigqueryconnection.projects.locations.connections.patch",
      "endpoint": "bigqueryconnection",
      "feature_class": "Bigquery.FC3",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.connections.update",
      "event_name": "google.cloud.bigquery.connection.v1.ConnectionService.UpdateConnection",
      "stage": "v1",
      "action_id_int": 66
    },
    "Bigquery.A67": {
      "action_description": "Returns a list of connections in the given project.",
      "api": "bigqueryconnection.projects.locations.connections.list",
      "endpoint": "bigqueryconnection",
      "feature_class": "Bigquery.FC3",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.connections.list",
      "event_name": "google.cloud.bigquery.connection.v1.ConnectionService.ListConnections",
      "stage": "v1",
      "action_id_int": 67
    },
    "Bigquery.A68": {
      "action_description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
      "api": "bigqueryconnection.projects.locations.connections.getIamPolicy",
      "endpoint": "bigqueryconnection",
      "feature_class": "Bigquery.FC3",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.connections.getIamPolicy",
      "event_name": "google.cloud.bigquery.connection.v1.ConnectionService.GetIamPolicy",
      "stage": "v1",
      "action_id_int": 68
    },
    "Bigquery.A69": {
      "action_description": "Creates a new connection.",
      "api": "bigqueryconnection.projects.locations.connections.create",
      "endpoint": "bigqueryconnection",
      "feature_class": "Bigquery.FC3",
      "feature_class_action_type": "core",
      "iam_permission": "bigquery.connections.create",
      "event_name": "google.cloud.bigquery.connection.v1.ConnectionService.CreateConnection",
      "stage": "v1",
      "action_id_int": 69
    },
    "Bigquery.A70": {
      "action_description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a not_found error.",
      "api": "bigqueryconnection.projects.locations.connections.testIamPermissions",
      "endpoint": "bigqueryconnection",
      "feature_class": "Bigquery.FC3",
      "feature_class_action_type": "other",
      "iam_permission": "-",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 70
    },
    "Bigquery.A71": {
      "action_description": "Sets the access control policy on the specified resource. Replaces any existing policy.",
      "api": "bigqueryconnection.projects.locations.connections.setIamPolicy",
      "endpoint": "bigqueryconnection",
      "feature_class": "Bigquery.FC3",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.connections.setIamPolicy",
      "event_name": "google.cloud.bigquery.connection.v1.ConnectionService.SetIamPolicy",
      "stage": "v1",
      "action_id_int": 71
    },
    "Bigquery.A73": {
      "action_description": "Lists information about the supported locations for this service.",
      "api": "bigquerydatatransfer.projects.locations.list",
      "endpoint": "bigquerydatatransfer",
      "feature_class": "Bigquery.FC4",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.transfers.get",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 73
    },
    "Bigquery.A74": {
      "action_description": "Gets information about a location.",
      "api": "bigquerydatatransfer.projects.locations.get",
      "endpoint": "bigquerydatatransfer",
      "feature_class": "Bigquery.FC4",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.transfers.get",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 74
    },
    "Bigquery.A75": {
      "action_description": "Deletes the specified transfer run.",
      "api": "bigquerydatatransfer.projects.locations.transferConfigs.runs.delete",
      "endpoint": "bigquerydatatransfer",
      "feature_class": "Bigquery.FC4",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.transfers.update",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 75
    },
    "Bigquery.A76": {
      "action_description": "Returns information about the particular transfer run.",
      "api": "bigquerydatatransfer.projects.locations.transferConfigs.runs.get",
      "endpoint": "bigquerydatatransfer",
      "feature_class": "Bigquery.FC4",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.transfers.get",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 76
    },
    "Bigquery.A77": {
      "action_description": "Returns information about running and completed jobs.",
      "api": "bigquerydatatransfer.projects.locations.transferConfigs.runs.list",
      "endpoint": "bigquerydatatransfer",
      "feature_class": "Bigquery.FC4",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.transfers.get",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 77
    },
    "Bigquery.A78": {
      "action_description": "Returns user facing log messages for the data transfer run.",
      "api": "bigquerydatatransfer.projects.locations.transferConfigs.runs.transferLogs.list",
      "endpoint": "bigquerydatatransfer",
      "feature_class": "Bigquery.FC4",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.transfers.get",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 78
    },
    "Bigquery.A79": {
      "action_description": "Creates transfer runs for a time range [start_time, end_time]. For each date - or whatever granularity the data source supports - in the range, one transfer run is created. Note that runs are created per utc time in the time range. Deprecated: use startmanualtransferruns instead.",
      "api": "bigquerydatatransfer.projects.locations.transferConfigs.scheduleRuns",
      "endpoint": "bigquerydatatransfer",
      "feature_class": "Bigquery.FC4",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.transfers.update",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 79
    },
    "Bigquery.A80": {
      "action_description": "Returns information about a data transfer config.",
      "api": "bigquerydatatransfer.projects.locations.transferConfigs.get",
      "endpoint": "bigquerydatatransfer",
      "feature_class": "Bigquery.FC4",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.transfers.get",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 80
    },
    "Bigquery.A81": {
      "action_description": "Start manual transfer runs to be executed now with schedule_time equal to current time. The transfer runs can be created for a time range where the run_time is between start_time (inclusive) and end_time (exclusive), or for a specific run_time.",
      "api": "bigquerydatatransfer.projects.locations.transferConfigs.startManualRuns",
      "endpoint": "bigquerydatatransfer",
      "feature_class": "Bigquery.FC4",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.transfers.update",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 81
    },
    "Bigquery.A82": {
      "action_description": "Returns information about all data transfers in the project.",
      "api": "bigquerydatatransfer.projects.locations.transferConfigs.list",
      "endpoint": "bigquerydatatransfer",
      "feature_class": "Bigquery.FC4",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.transfers.get",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 82
    },
    "Bigquery.A83": {
      "action_description": "Creates a new data transfer configuration.",
      "api": "bigquerydatatransfer.projects.locations.transferConfigs.create",
      "endpoint": "bigquerydatatransfer",
      "feature_class": "Bigquery.FC4",
      "feature_class_action_type": "core",
      "iam_permission": "bigquery.transfers.update",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 83
    },
    "Bigquery.A84": {
      "action_description": "Deletes a data transfer configuration, including any associated transfer runs and logs.",
      "api": "bigquerydatatransfer.projects.locations.transferConfigs.delete",
      "endpoint": "bigquerydatatransfer",
      "feature_class": "Bigquery.FC4",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.transfers.update",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 84
    },
    "Bigquery.A85": {
      "action_description": "Updates a data transfer configuration. All fields must be set, even if they are not updated.",
      "api": "bigquerydatatransfer.projects.locations.transferConfigs.patch",
      "endpoint": "bigquerydatatransfer",
      "feature_class": "Bigquery.FC4",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.transfers.update",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 85
    },
    "Bigquery.A86": {
      "action_description": "Retrieves a supported data source and returns its settings, which can be used for ui rendering.",
      "api": "bigquerydatatransfer.projects.locations.dataSources.get",
      "endpoint": "bigquerydatatransfer",
      "feature_class": "Bigquery.FC4",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.transfers.get",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 86
    },
    "Bigquery.A87": {
      "action_description": "Returns true if valid credentials exist for the given data source and requesting user. Some data sources doesn't support service account, so we need to talk to them on behalf of the end user. This API just checks whether we have OAuth token for the particular user, which is a pre-requisite before user can create a transfer config.",
      "api": "bigquerydatatransfer.projects.locations.dataSources.checkValidCreds",
      "endpoint": "bigquerydatatransfer",
      "feature_class": "Bigquery.FC4",
      "feature_class_action_type": "other",
      "iam_permission": "-",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 87
    },
    "Bigquery.A88": {
      "action_description": "Lists supported data sources and returns their settings, which can be used for ui rendering.",
      "api": "bigquerydatatransfer.projects.locations.dataSources.list",
      "endpoint": "bigquerydatatransfer",
      "feature_class": "Bigquery.FC4",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.transfers.get",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 88
    },
    "Bigquery.A89": {
      "action_description": "Retrieves a supported data source and returns its settings, which can be used for ui rendering.",
      "api": "bigquerydatatransfer.projects.dataSources.get",
      "endpoint": "bigquerydatatransfer",
      "feature_class": "Bigquery.FC4",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.transfers.get",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 89
    },
    "Bigquery.A90": {
      "action_description": "Lists supported data sources and returns their settings, which can be used for ui rendering.",
      "api": "bigquerydatatransfer.projects.dataSources.list",
      "endpoint": "bigquerydatatransfer",
      "feature_class": "Bigquery.FC4",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.transfers.get",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 90
    },
    "Bigquery.A91": {
      "action_description": "Returns true if valid credentials exist for the given data source and requesting user. Some data sources doesn't support service account, so we need to talk to them on behalf of the end user. This API just checks whether we have OAuth token for the particular user, which is a pre-requisite before user can create a transfer config.",
      "api": "bigquerydatatransfer.projects.dataSources.checkValidCreds",
      "endpoint": "bigquerydatatransfer",
      "feature_class": "Bigquery.FC4",
      "feature_class_action_type": "other",
      "iam_permission": "-",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 91
    },
    "Bigquery.A92": {
      "action_description": "Returns information about running and completed jobs.",
      "api": "bigquerydatatransfer.projects.transferConfigs.runs.list",
      "endpoint": "bigquerydatatransfer",
      "feature_class": "Bigquery.FC4",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.transfers.get",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 92
    },
    "Bigquery.A93": {
      "action_description": "Deletes the specified transfer run.",
      "api": "bigquerydatatransfer.projects.transferConfigs.runs.delete",
      "endpoint": "bigquerydatatransfer",
      "feature_class": "Bigquery.FC4",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.transfers.update",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 93
    },
    "Bigquery.A94": {
      "action_description": "Returns information about the particular transfer run.",
      "api": "bigquerydatatransfer.projects.transferConfigs.runs.get",
      "endpoint": "bigquerydatatransfer",
      "feature_class": "Bigquery.FC4",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.transfers.get",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 94
    },
    "Bigquery.A95": {
      "action_description": "Returns user facing log messages for the data transfer run.",
      "api": "bigquerydatatransfer.projects.transferConfigs.runs.transferLogs.list",
      "endpoint": "bigquerydatatransfer",
      "feature_class": "Bigquery.FC4",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.transfers.get",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 95
    },
    "Bigquery.A96": {
      "action_description": "Returns information about a data transfer config.",
      "api": "bigquerydatatransfer.projects.transferConfigs.get",
      "endpoint": "bigquerydatatransfer",
      "feature_class": "Bigquery.FC4",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.transfers.get",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 96
    },
    "Bigquery.A97": {
      "action_description": "Returns information about all data transfers in the project.",
      "api": "bigquerydatatransfer.projects.transferConfigs.list",
      "endpoint": "bigquerydatatransfer",
      "feature_class": "Bigquery.FC4",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.transfers.get",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 97
    },
    "Bigquery.A98": {
      "action_description": "Updates a data transfer configuration. All fields must be set, even if they are not updated.",
      "api": "bigquerydatatransfer.projects.transferConfigs.patch",
      "endpoint": "bigquerydatatransfer",
      "feature_class": "Bigquery.FC4",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.transfers.update",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 98
    },
    "Bigquery.A99": {
      "action_description": "Creates transfer runs for a time range [start_time, end_time]. For each date - or whatever granularity the data source supports - in the range, one transfer run is created. Note that runs are created per utc time in the time range. Deprecated: use startmanualtransferruns instead.",
      "api": "bigquerydatatransfer.projects.transferConfigs.scheduleRuns",
      "endpoint": "bigquerydatatransfer",
      "feature_class": "Bigquery.FC4",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.transfers.update",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 99
    },
    "Bigquery.A100": {
      "action_description": "Start manual transfer runs to be executed now with schedule_time equal to current time. The transfer runs can be created for a time range where the run_time is between start_time (inclusive) and end_time (exclusive), or for a specific run_time.",
      "api": "bigquerydatatransfer.projects.transferConfigs.startManualRuns",
      "endpoint": "bigquerydatatransfer",
      "feature_class": "Bigquery.FC4",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.transfers.update",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 100
    },
    "Bigquery.A101": {
      "action_description": "Creates a new data transfer configuration.",
      "api": "bigquerydatatransfer.projects.transferConfigs.create",
      "endpoint": "bigquerydatatransfer",
      "feature_class": "Bigquery.FC4",
      "feature_class_action_type": "core",
      "iam_permission": "bigquery.transfers.update",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 101
    },
    "Bigquery.A102": {
      "action_description": "Deletes a data transfer configuration, including any associated transfer runs and logs.",
      "api": "bigquerydatatransfer.projects.transferConfigs.delete",
      "endpoint": "bigquerydatatransfer",
      "feature_class": "Bigquery.FC4",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.transfers.update",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 102
    },
    "Bigquery.A103": {
      "action_description": "Returns information about the capacity commitment.",
      "api": "bigqueryreservation.projects.locations.capacityCommitments.get",
      "endpoint": "bigqueryreservation",
      "feature_class": "Bigquery.FC5",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.capacityCommitments.get",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 103
    },
    "Bigquery.A104": {
      "action_description": "Merges capacity commitments of the same plan into a single commitment. The resulting capacity commitment has the greater commitment_end_time out of the to-be-merged capacity commitments. Attempting to merge capacity commitments of different plan will fail with the error code google. Rpc. Code. Failed_precondition.",
      "api": "bigqueryreservation.projects.locations.capacityCommitments.merge",
      "endpoint": "bigqueryreservation",
      "feature_class": "Bigquery.FC5",
      "feature_class_action_type": "other",
      "iam_permission": "-",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 104
    },
    "Bigquery.A105": {
      "action_description": "Lists all the capacity commitments for the admin project.",
      "api": "bigqueryreservation.projects.locations.capacityCommitments.list",
      "endpoint": "bigqueryreservation",
      "feature_class": "Bigquery.FC5",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.capacityCommitments.list",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 105
    },
    "Bigquery.A106": {
      "action_description": "Creates a new capacity commitment resource.",
      "api": "bigqueryreservation.projects.locations.capacityCommitments.create",
      "endpoint": "bigqueryreservation",
      "feature_class": "Bigquery.FC5",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.capacityCommitments.create",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 106
    },
    "Bigquery.A107": {
      "action_description": "Splits capacity commitment to two commitments of the same plan and commitment_end_time. A common use case is to enable downgrading commitments. For example, in order to downgrade from 10000 slots to 8000, you might split a 10000 capacity commitment into commitments of 2000 and 8000. Then, you would change the plan of the first one to flex and then delete it.",
      "api": "bigqueryreservation.projects.locations.capacityCommitments.split",
      "endpoint": "bigqueryreservation",
      "feature_class": "Bigquery.FC5",
      "feature_class_action_type": "other",
      "iam_permission": "-",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 107
    },
    "Bigquery.A108": {
      "action_description": "Deletes a capacity commitment. Attempting to delete capacity commitment before its commitment_end_time will fail with the error code google. Rpc. Code. Failed_precondition.",
      "api": "bigqueryreservation.projects.locations.capacityCommitments.delete",
      "endpoint": "bigqueryreservation",
      "feature_class": "Bigquery.FC5",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.capacityCommitments.delete",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 108
    },
    "Bigquery.A109": {
      "action_description": "Updates an existing capacity commitment. Only plan and renewal_plan fields can be updated. Plan can only be changed to a plan of a longer commitment period. Attempting to change to a plan with shorter commitment period will fail with the error code google. Rpc. Code. Failed_precondition.",
      "api": "bigqueryreservation.projects.locations.capacityCommitments.patch",
      "endpoint": "bigqueryreservation",
      "feature_class": "Bigquery.FC5",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.capacityCommitments.update",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 109
    },
    "Bigquery.A110": {
      "action_description": "Creates an assignment object which allows the given project to submit jobs of a certain type using slots from the specified reservation.",
      "api": "bigqueryreservation.projects.locations.reservations.assignments.create",
      "endpoint": "bigqueryreservation",
      "feature_class": "Bigquery.FC5",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.reservationAssignments.create",
      "event_name": "google.cloud.bigquery.reservation.v1.ReservationService.CreateAssignment",
      "stage": "v1",
      "action_id_int": 110
    },
    "Bigquery.A111": {
      "action_description": "Deletes a assignment.",
      "api": "bigqueryreservation.projects.locations.reservations.assignments.delete",
      "endpoint": "bigqueryreservation",
      "feature_class": "Bigquery.FC5",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.reservationAssignments.delete",
      "event_name": "google.cloud.bigquery.reservation.v1.ReservationService.DeleteAssignment",
      "stage": "v1",
      "action_id_int": 111
    },
    "Bigquery.A112": {
      "action_description": "Lists assignments. Only explicitly created assignments will be returned.",
      "api": "bigqueryreservation.projects.locations.reservations.assignments.list",
      "endpoint": "bigqueryreservation",
      "feature_class": "Bigquery.FC5",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.reservationAssignments.list",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 112
    },
    "Bigquery.A113": {
      "action_description": "Moves an assignment under a new reservation. This differs from removing an existing assignment and recreating a new one by providing a transactional change that ensures an assignee always has an associated reservation.",
      "api": "bigqueryreservation.projects.locations.reservations.assignments.move",
      "endpoint": "bigqueryreservation",
      "feature_class": "Bigquery.FC5",
      "feature_class_action_type": "other",
      "iam_permission": "-",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 113
    },
    "Bigquery.A114": {
      "action_description": "Lists all the reservations for the project in the specified location.",
      "api": "bigqueryreservation.projects.locations.reservations.list",
      "endpoint": "bigqueryreservation",
      "feature_class": "Bigquery.FC5",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.reservations.list",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 114
    },
    "Bigquery.A115": {
      "action_description": "Returns information about the reservation.",
      "api": "bigqueryreservation.projects.locations.reservations.get",
      "endpoint": "bigqueryreservation",
      "feature_class": "Bigquery.FC5",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.reservations.get",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 115
    },
    "Bigquery.A116": {
      "action_description": "Deletes a reservation. Returns google. Rpc. Code. Failed_precondition when reservation has assignments.",
      "api": "bigqueryreservation.projects.locations.reservations.delete",
      "endpoint": "bigqueryreservation",
      "feature_class": "Bigquery.FC5",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.reservations.delete",
      "event_name": "google.cloud.bigquery.reservation.v1.ReservationService.DeleteReservation",
      "stage": "v1",
      "action_id_int": 116
    },
    "Bigquery.A117": {
      "action_description": "Creates a new reservation resource.",
      "api": "bigqueryreservation.projects.locations.reservations.create",
      "endpoint": "bigqueryreservation",
      "feature_class": "Bigquery.FC5",
      "feature_class_action_type": "core",
      "iam_permission": "bigquery.reservations.create",
      "event_name": "google.cloud.bigquery.reservation.v1.ReservationService.CreateAssignment",
      "stage": "v1",
      "action_id_int": 117
    },
    "Bigquery.A118": {
      "action_description": "Updates an existing reservation resource.",
      "api": "bigqueryreservation.projects.locations.reservations.patch",
      "endpoint": "bigqueryreservation",
      "feature_class": "Bigquery.FC5",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.reservations.update",
      "event_name": "google.cloud.bigquery.reservation.v1.ReservationService.UpdateReservation",
      "stage": "v1",
      "action_id_int": 118
    },
    "Bigquery.A119": {
      "action_description": "Retrieves a BI reservation.",
      "api": "bigqueryreservation.projects.locations.getBiReservation",
      "endpoint": "bigqueryreservation",
      "feature_class": "Bigquery.FC5",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.bireservations.get",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 119
    },
    "Bigquery.A120": {
      "action_description": "Looks up assignments for a specified resource for a particular region. If the request is about a project: 1. Assignments created on the project will be returned if they exist. 2. Otherwise assignments created on the closest ancestor will be returned. 3. Assignments for different jobtypes will all be returned. The same logic applies if the request is about a folder. If the request is about an organization, then assignments created on the organization will be returned (organization doesn't have ancestors).",
      "api": "bigqueryreservation.projects.locations.searchAllAssignments",
      "endpoint": "bigqueryreservation",
      "feature_class": "Bigquery.FC5",
      "feature_class_action_type": "other",
      "iam_permission": "-",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 120
    },
    "Bigquery.A121": {
      "action_description": "Updates a BI reservation. Only fields specified in the field_mask are updated. A singleton BI reservation always exists with default size 0. In order to reserve BI capacity it needs to be updated to an amount greater than 0. In order to release BI Capacity Reservation size must be set to 0.",
      "api": "bigqueryreservation.projects.locations.updateBiReservation",
      "endpoint": "bigqueryreservation",
      "feature_class": "Bigquery.FC5",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.bireservations.update",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 121
    },
    "Bigquery.A122": {
      "action_description": "Looks up assignments for a specified resource for a particular region. If the request is about a project: 1. Assignments created on the project will be returned if they exist. 2. Otherwise assignments created on the closest ancestor will be returned. 3. Assignments for different jobtypes will all be returned. The same logic applies if the request is about a folder. If the request is about an organization, then assignments created on the organization will be returned (organization doesn't have ancestors).",
      "api": "bigqueryreservation.projects.locations.searchAssignments",
      "endpoint": "bigqueryreservation",
      "feature_class": "Bigquery.FC5",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.reservationAssignments.search",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 122
    },
    "Bigquery.A125": {
      "action_description": "Updates the tags for an existing connection.",
      "api": "-",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC3",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.connections.updateTag",
      "event_name": "-",
      "stage": "TBD",
      "action_id_int": 125
    },
    "Bigquery.A126": {
      "action_description": "Updates the tags for an existing model.",
      "api": "-",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC6",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.models.updateTag",
      "event_name": "-",
      "stage": "TBD",
      "action_id_int": 126
    },
    "Bigquery.A130": {
      "action_description": "Updates the tags for an existing routine.",
      "api": "-",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC2",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.routines.updateTag",
      "event_name": "-",
      "stage": "TBD",
      "action_id_int": 130
    },
    "Bigquery.A131": {
      "action_description": "Enroll data sources in a user project. This allows users to create transfer configurations for these data sources.",
      "api": "bigquerydatatransfer.projects.enrollDataSources",
      "endpoint": "bigquerydatatransfer",
      "feature_class": "Bigquery.FC4",
      "feature_class_action_type": "other",
      "iam_permission": "-",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 131
    },
    "Bigquery.A132": {
      "action_description": "Enroll data sources in a user project. This allows users to create transfer configurations for these data sources.",
      "api": "bigquerydatatransfer.projects.locations.enrollDataSources",
      "endpoint": "bigquerydatatransfer",
      "feature_class": "Bigquery.FC4",
      "feature_class_action_type": "other",
      "iam_permission": "-",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 132
    },
    "Bigquery.A134": {
      "action_description": "Access historical data for a table that has, or has previously had, row-level access policies.",
      "api": "-",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.rowAccessPolicies.overrideTimeTravelRestrictions",
      "event_name": "-",
      "stage": "v2",
      "action_id_int": 134
    },
    "Bigquery.A135": {
      "action_description": "Delegate connection to create authorized external tables and remote functions.",
      "api": "-",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC3",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.connections.delegate",
      "event_name": "-",
      "stage": "TBD",
      "action_id_int": 135
    },
    "Bigquery.A136": {
      "action_description": "Retrieve execution metadata on any job.",
      "api": "-",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.jobs.listExecutionMetadata",
      "event_name": "-",
      "stage": "TBD",
      "action_id_int": 136
    },
    "Bigquery.A137": {
      "action_description": "Create index of a table.",
      "api": "-",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.tables.createIndex",
      "event_name": "-",
      "stage": "TBD",
      "action_id_int": 137
    },
    "Bigquery.A138": {
      "action_description": "Delete index of a table.",
      "api": "-",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC1",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.tables.deleteIndex",
      "event_name": "-",
      "stage": "TBD",
      "action_id_int": 138
    },
    "Bigquery.A139": {
      "action_description": "Creates a new data policy under a project with the given dataPolicyId (used as the display name), policy tag, and data policy type.",
      "api": "bigquerydatapolicy.projects.locations.dataPolicies.create",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC8",
      "feature_class_action_type": "core",
      "iam_permission": "bigquery.dataPolicies.create",
      "event_name": "google.cloud.bigquery.datapolicies.v1.DataPolicyService.CreateDataPolicy",
      "stage": "v1",
      "action_id_int": 139
    },
    "Bigquery.A140": {
      "action_description": "Deletes the data policy specified by its resource name.",
      "api": "bigquerydatapolicy.projects.locations.dataPolicies.delete",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC8",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.dataPolicies.delete",
      "event_name": "google.cloud.bigquery.datapolicies.v1.DataPolicyService.DeleteDataPolicy",
      "stage": "v1",
      "action_id_int": 140
    },
    "Bigquery.A141": {
      "action_description": "Gets the data policy specified by its resource name.",
      "api": "bigquerydatapolicy.projects.locations.dataPolicies.get",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC8",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.dataPolicies.get",
      "event_name": "google.cloud.bigquery.datapolicies.v1.DataPolicyService.GetDataPolicy",
      "stage": "v1",
      "action_id_int": 141
    },
    "Bigquery.A142": {
      "action_description": "Gets the IAM policy for the specified data policy.",
      "api": "bigquerydatapolicy.projects.locations.dataPolicies.getIamPolicy",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC8",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.dataPolicies.getIamPolicy",
      "event_name": "google.cloud.bigquery.datapolicies.v1.DataPolicyService.GetIamPolicy",
      "stage": "v1",
      "action_id_int": 142
    },
    "Bigquery.A143": {
      "action_description": "List all of the data policies in the specified parent project.",
      "api": "bigquerydatapolicy.projects.locations.dataPolicies.list",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC8",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.dataPolicies.list",
      "event_name": "google.cloud.bigquery.datapolicies.v1.DataPolicyService.ListDataPolicies",
      "stage": "v1",
      "action_id_int": 143
    },
    "Bigquery.A144": {
      "action_description": "-.",
      "api": "-",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC8",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.dataPolicies.maskedGet",
      "event_name": "-",
      "stage": "v1",
      "action_id_int": 144
    },
    "Bigquery.A145": {
      "action_description": "Sets the IAM policy for the specified data policy.",
      "api": "bigquerydatapolicy.projects.locations.dataPolicies.setIamPolicy",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC8",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.dataPolicies.setIamPolicy",
      "event_name": "google.cloud.bigquery.datapolicies.v1.DataPolicyService.SetIamPolicy",
      "stage": "v1",
      "action_id_int": 145
    },
    "Bigquery.A146": {
      "action_description": "Updates the metadata for an existing data policy. The target data policy can be specified by the resource name.",
      "api": "bigquerydatapolicy.projects.locations.dataPolicies.patch",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC8",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.dataPolicies.update",
      "event_name": "google.cloud.bigquery.datapolicies.v1.DataPolicyService.UpdateDataPolicy",
      "stage": "v1",
      "action_id_int": 146
    },
    "Bigquery.A147": {
      "action_description": "Renames the ID (display name) of the specified data policy.",
      "api": "bigquerydatapolicy.projects.locations.dataPolicies.rename",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC8",
      "feature_class_action_type": "other",
      "iam_permission": "bigquery.dataPolicies.update",
      "event_name": "google.cloud.bigquery.datapolicies.v1.DataPolicyService.RenameDataPolicy",
      "stage": "v1",
      "action_id_int": 147
    },
    "Bigquery.A148": {
      "action_description": "Returns the caller's permission on the specified data policy resource.",
      "api": "bigquerydatapolicy.projects.locations.dataPolicies.testIamPermissions",
      "endpoint": "bigquery",
      "feature_class": "Bigquery.FC8",
      "feature_class_action_type": "other",
      "iam_permission": "-",
      "event_name": "TODO",
      "stage": "v1",
      "action_id_int": 148
    }
  },
  "dfd": {
    "body": ""
  }
}